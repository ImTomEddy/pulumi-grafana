// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * **Note:** This resource is available only with Grafana Enterprise 8.+.
 *
 * * [Official documentation](https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/)
 * * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/access_control/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumi/grafana";
 *
 * const superUser = new grafana.Role("super_user", {
 *     description: "My Super User description",
 *     global: true,
 *     permissions: [
 *         {
 *             action: "org.users:add",
 *             scope: "users:*",
 *         },
 *         {
 *             action: "org.users:write",
 *             scope: "users:*",
 *         },
 *         {
 *             action: "org.users:read",
 *             scope: "users:*",
 *         },
 *     ],
 *     uid: "superuseruid",
 *     version: 1,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import grafana:index/role:Role role_name {{uid}}
 * ```
 */
export class Role extends pulumi.CustomResource {
    /**
     * Get an existing Role resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleState, opts?: pulumi.CustomResourceOptions): Role {
        return new Role(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:index/role:Role';

    /**
     * Returns true if the given object is an instance of Role.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Role {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Role.__pulumiType;
    }

    /**
     * Description of the role.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name of the role. Available with Grafana 8.5+.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Boolean to state whether the role is available across all organizations or not. Defaults to `false`.
     */
    public readonly global!: pulumi.Output<boolean | undefined>;
    /**
     * Group of the role. Available with Grafana 8.5+.
     */
    public readonly group!: pulumi.Output<string | undefined>;
    /**
     * Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to `false`.
     */
    public readonly hidden!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the role
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specific set of actions granted by the role.
     */
    public readonly permissions!: pulumi.Output<outputs.RolePermission[] | undefined>;
    /**
     * Unique identifier of the role. Used for assignments.
     */
    public readonly uid!: pulumi.Output<string>;
    /**
     * Version of the role. A role is updated only on version increase.
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a Role resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleArgs | RoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["global"] = state ? state.global : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["hidden"] = state ? state.hidden : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as RoleArgs | undefined;
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["global"] = args ? args.global : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["hidden"] = args ? args.hidden : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["uid"] = args ? args.uid : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Role.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Role resources.
 */
export interface RoleState {
    /**
     * Description of the role.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of the role. Available with Grafana 8.5+.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Boolean to state whether the role is available across all organizations or not. Defaults to `false`.
     */
    global?: pulumi.Input<boolean>;
    /**
     * Group of the role. Available with Grafana 8.5+.
     */
    group?: pulumi.Input<string>;
    /**
     * Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to `false`.
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * Name of the role
     */
    name?: pulumi.Input<string>;
    /**
     * Specific set of actions granted by the role.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.RolePermission>[]>;
    /**
     * Unique identifier of the role. Used for assignments.
     */
    uid?: pulumi.Input<string>;
    /**
     * Version of the role. A role is updated only on version increase.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * Description of the role.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of the role. Available with Grafana 8.5+.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Boolean to state whether the role is available across all organizations or not. Defaults to `false`.
     */
    global?: pulumi.Input<boolean>;
    /**
     * Group of the role. Available with Grafana 8.5+.
     */
    group?: pulumi.Input<string>;
    /**
     * Boolean to state whether the role should be visible in the Grafana UI or not. Available with Grafana 8.5+. Defaults to `false`.
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * Name of the role
     */
    name?: pulumi.Input<string>;
    /**
     * Specific set of actions granted by the role.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.RolePermission>[]>;
    /**
     * Unique identifier of the role. Used for assignments.
     */
    uid?: pulumi.Input<string>;
    /**
     * Version of the role. A role is updated only on version increase.
     */
    version: pulumi.Input<number>;
}
