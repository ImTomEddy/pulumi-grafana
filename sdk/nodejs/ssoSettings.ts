// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages Grafana SSO Settings for OAuth2. SAML support will be added soon.
 *
 * * [Official documentation](https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/)
 * * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/sso-settings/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as grafana from "@pulumiverse/grafana";
 *
 * const githubSsoSettings = new grafana.SsoSettings("githubSsoSettings", {
 *     oauth2Settings: {
 *         allowedOrganizations: "organization1,organization2",
 *         clientId: "github_client_id",
 *         clientSecret: "github_client_secret",
 *         teamIds: "12,50,123",
 *     },
 *     providerName: "github",
 * });
 * ```
 */
export class SsoSettings extends pulumi.CustomResource {
    /**
     * Get an existing SsoSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsoSettingsState, opts?: pulumi.CustomResourceOptions): SsoSettings {
        return new SsoSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'grafana:index/ssoSettings:SsoSettings';

    /**
     * Returns true if the given object is an instance of SsoSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsoSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsoSettings.__pulumiType;
    }

    /**
     * The SSO settings set.
     */
    public readonly oauth2Settings!: pulumi.Output<outputs.SsoSettingsOauth2Settings>;
    /**
     * The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth.
     */
    public readonly providerName!: pulumi.Output<string>;

    /**
     * Create a SsoSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SsoSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsoSettingsArgs | SsoSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsoSettingsState | undefined;
            resourceInputs["oauth2Settings"] = state ? state.oauth2Settings : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
        } else {
            const args = argsOrState as SsoSettingsArgs | undefined;
            if ((!args || args.oauth2Settings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oauth2Settings'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            resourceInputs["oauth2Settings"] = args ? args.oauth2Settings : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsoSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SsoSettings resources.
 */
export interface SsoSettingsState {
    /**
     * The SSO settings set.
     */
    oauth2Settings?: pulumi.Input<inputs.SsoSettingsOauth2Settings>;
    /**
     * The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth.
     */
    providerName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SsoSettings resource.
 */
export interface SsoSettingsArgs {
    /**
     * The SSO settings set.
     */
    oauth2Settings: pulumi.Input<inputs.SsoSettingsOauth2Settings>;
    /**
     * The name of the SSO provider. Supported values: github, gitlab, google, azuread, okta, generic_oauth.
     */
    providerName: pulumi.Input<string>;
}
