// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-grafana/sdk/go/grafana/internal"
)

func LookupRole(ctx *pulumi.Context, args *LookupRoleArgs, opts ...pulumi.InvokeOption) (*LookupRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoleResult
	err := ctx.Invoke("grafana:index/getRole:getRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRole.
type LookupRoleArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getRole.
type LookupRoleResult struct {
	Description string `pulumi:"description"`
	DisplayName string `pulumi:"displayName"`
	Global      bool   `pulumi:"global"`
	Group       string `pulumi:"group"`
	Hidden      bool   `pulumi:"hidden"`
	// The provider-assigned unique ID for this managed resource.
	Id          string              `pulumi:"id"`
	Name        string              `pulumi:"name"`
	OrgId       string              `pulumi:"orgId"`
	Permissions []GetRolePermission `pulumi:"permissions"`
	Uid         string              `pulumi:"uid"`
	Version     int                 `pulumi:"version"`
}

func LookupRoleOutput(ctx *pulumi.Context, args LookupRoleOutputArgs, opts ...pulumi.InvokeOption) LookupRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRoleResult, error) {
			args := v.(LookupRoleArgs)
			r, err := LookupRole(ctx, &args, opts...)
			var s LookupRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRoleResultOutput)
}

// A collection of arguments for invoking getRole.
type LookupRoleOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleArgs)(nil)).Elem()
}

// A collection of values returned by getRole.
type LookupRoleResultOutput struct{ *pulumi.OutputState }

func (LookupRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleResult)(nil)).Elem()
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutput() LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutputWithContext(ctx context.Context) LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Global() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRoleResult) bool { return v.Global }).(pulumi.BoolOutput)
}

func (o LookupRoleResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Group }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRoleResult) bool { return v.Hidden }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Permissions() GetRolePermissionArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []GetRolePermission { return v.Permissions }).(GetRolePermissionArrayOutput)
}

func (o LookupRoleResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRoleResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleResultOutput{})
}
