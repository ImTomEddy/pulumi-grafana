// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.NewBuiltinRoleAssignment(ctx, "viewer", &grafana.BuiltinRoleAssignmentArgs{
//				BuiltinRole: pulumi.String("Viewer"),
//				Roles: BuiltinRoleAssignmentRoleArray{
//					&BuiltinRoleAssignmentRoleArgs{
//						Global: pulumi.Bool(false),
//						Uid:    pulumi.String("firstuid"),
//					},
//					&BuiltinRoleAssignmentRoleArgs{
//						Global: pulumi.Bool(true),
//						Uid:    pulumi.String("seconduid"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import grafana:index/builtinRoleAssignment:BuiltinRoleAssignment builtin_role_name {{builtin_role_name}}
//
// ```
type BuiltinRoleAssignment struct {
	pulumi.CustomResourceState

	// Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin` to assign the roles to.
	BuiltinRole pulumi.StringOutput `pulumi:"builtinRole"`
	// Fixed or custom roles which provide granular access for specific resources within Grafana.
	Roles BuiltinRoleAssignmentRoleArrayOutput `pulumi:"roles"`
}

// NewBuiltinRoleAssignment registers a new resource with the given unique name, arguments, and options.
func NewBuiltinRoleAssignment(ctx *pulumi.Context,
	name string, args *BuiltinRoleAssignmentArgs, opts ...pulumi.ResourceOption) (*BuiltinRoleAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BuiltinRole == nil {
		return nil, errors.New("invalid value for required argument 'BuiltinRole'")
	}
	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BuiltinRoleAssignment
	err := ctx.RegisterResource("grafana:index/builtinRoleAssignment:BuiltinRoleAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBuiltinRoleAssignment gets an existing BuiltinRoleAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBuiltinRoleAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BuiltinRoleAssignmentState, opts ...pulumi.ResourceOption) (*BuiltinRoleAssignment, error) {
	var resource BuiltinRoleAssignment
	err := ctx.ReadResource("grafana:index/builtinRoleAssignment:BuiltinRoleAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BuiltinRoleAssignment resources.
type builtinRoleAssignmentState struct {
	// Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin` to assign the roles to.
	BuiltinRole *string `pulumi:"builtinRole"`
	// Fixed or custom roles which provide granular access for specific resources within Grafana.
	Roles []BuiltinRoleAssignmentRole `pulumi:"roles"`
}

type BuiltinRoleAssignmentState struct {
	// Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin` to assign the roles to.
	BuiltinRole pulumi.StringPtrInput
	// Fixed or custom roles which provide granular access for specific resources within Grafana.
	Roles BuiltinRoleAssignmentRoleArrayInput
}

func (BuiltinRoleAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*builtinRoleAssignmentState)(nil)).Elem()
}

type builtinRoleAssignmentArgs struct {
	// Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin` to assign the roles to.
	BuiltinRole string `pulumi:"builtinRole"`
	// Fixed or custom roles which provide granular access for specific resources within Grafana.
	Roles []BuiltinRoleAssignmentRole `pulumi:"roles"`
}

// The set of arguments for constructing a BuiltinRoleAssignment resource.
type BuiltinRoleAssignmentArgs struct {
	// Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin` to assign the roles to.
	BuiltinRole pulumi.StringInput
	// Fixed or custom roles which provide granular access for specific resources within Grafana.
	Roles BuiltinRoleAssignmentRoleArrayInput
}

func (BuiltinRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*builtinRoleAssignmentArgs)(nil)).Elem()
}

type BuiltinRoleAssignmentInput interface {
	pulumi.Input

	ToBuiltinRoleAssignmentOutput() BuiltinRoleAssignmentOutput
	ToBuiltinRoleAssignmentOutputWithContext(ctx context.Context) BuiltinRoleAssignmentOutput
}

func (*BuiltinRoleAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**BuiltinRoleAssignment)(nil)).Elem()
}

func (i *BuiltinRoleAssignment) ToBuiltinRoleAssignmentOutput() BuiltinRoleAssignmentOutput {
	return i.ToBuiltinRoleAssignmentOutputWithContext(context.Background())
}

func (i *BuiltinRoleAssignment) ToBuiltinRoleAssignmentOutputWithContext(ctx context.Context) BuiltinRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuiltinRoleAssignmentOutput)
}

// BuiltinRoleAssignmentArrayInput is an input type that accepts BuiltinRoleAssignmentArray and BuiltinRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `BuiltinRoleAssignmentArrayInput` via:
//
//	BuiltinRoleAssignmentArray{ BuiltinRoleAssignmentArgs{...} }
type BuiltinRoleAssignmentArrayInput interface {
	pulumi.Input

	ToBuiltinRoleAssignmentArrayOutput() BuiltinRoleAssignmentArrayOutput
	ToBuiltinRoleAssignmentArrayOutputWithContext(context.Context) BuiltinRoleAssignmentArrayOutput
}

type BuiltinRoleAssignmentArray []BuiltinRoleAssignmentInput

func (BuiltinRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuiltinRoleAssignment)(nil)).Elem()
}

func (i BuiltinRoleAssignmentArray) ToBuiltinRoleAssignmentArrayOutput() BuiltinRoleAssignmentArrayOutput {
	return i.ToBuiltinRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i BuiltinRoleAssignmentArray) ToBuiltinRoleAssignmentArrayOutputWithContext(ctx context.Context) BuiltinRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuiltinRoleAssignmentArrayOutput)
}

// BuiltinRoleAssignmentMapInput is an input type that accepts BuiltinRoleAssignmentMap and BuiltinRoleAssignmentMapOutput values.
// You can construct a concrete instance of `BuiltinRoleAssignmentMapInput` via:
//
//	BuiltinRoleAssignmentMap{ "key": BuiltinRoleAssignmentArgs{...} }
type BuiltinRoleAssignmentMapInput interface {
	pulumi.Input

	ToBuiltinRoleAssignmentMapOutput() BuiltinRoleAssignmentMapOutput
	ToBuiltinRoleAssignmentMapOutputWithContext(context.Context) BuiltinRoleAssignmentMapOutput
}

type BuiltinRoleAssignmentMap map[string]BuiltinRoleAssignmentInput

func (BuiltinRoleAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuiltinRoleAssignment)(nil)).Elem()
}

func (i BuiltinRoleAssignmentMap) ToBuiltinRoleAssignmentMapOutput() BuiltinRoleAssignmentMapOutput {
	return i.ToBuiltinRoleAssignmentMapOutputWithContext(context.Background())
}

func (i BuiltinRoleAssignmentMap) ToBuiltinRoleAssignmentMapOutputWithContext(ctx context.Context) BuiltinRoleAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuiltinRoleAssignmentMapOutput)
}

type BuiltinRoleAssignmentOutput struct{ *pulumi.OutputState }

func (BuiltinRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuiltinRoleAssignment)(nil)).Elem()
}

func (o BuiltinRoleAssignmentOutput) ToBuiltinRoleAssignmentOutput() BuiltinRoleAssignmentOutput {
	return o
}

func (o BuiltinRoleAssignmentOutput) ToBuiltinRoleAssignmentOutputWithContext(ctx context.Context) BuiltinRoleAssignmentOutput {
	return o
}

// Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin` to assign the roles to.
func (o BuiltinRoleAssignmentOutput) BuiltinRole() pulumi.StringOutput {
	return o.ApplyT(func(v *BuiltinRoleAssignment) pulumi.StringOutput { return v.BuiltinRole }).(pulumi.StringOutput)
}

// Fixed or custom roles which provide granular access for specific resources within Grafana.
func (o BuiltinRoleAssignmentOutput) Roles() BuiltinRoleAssignmentRoleArrayOutput {
	return o.ApplyT(func(v *BuiltinRoleAssignment) BuiltinRoleAssignmentRoleArrayOutput { return v.Roles }).(BuiltinRoleAssignmentRoleArrayOutput)
}

type BuiltinRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (BuiltinRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuiltinRoleAssignment)(nil)).Elem()
}

func (o BuiltinRoleAssignmentArrayOutput) ToBuiltinRoleAssignmentArrayOutput() BuiltinRoleAssignmentArrayOutput {
	return o
}

func (o BuiltinRoleAssignmentArrayOutput) ToBuiltinRoleAssignmentArrayOutputWithContext(ctx context.Context) BuiltinRoleAssignmentArrayOutput {
	return o
}

func (o BuiltinRoleAssignmentArrayOutput) Index(i pulumi.IntInput) BuiltinRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BuiltinRoleAssignment {
		return vs[0].([]*BuiltinRoleAssignment)[vs[1].(int)]
	}).(BuiltinRoleAssignmentOutput)
}

type BuiltinRoleAssignmentMapOutput struct{ *pulumi.OutputState }

func (BuiltinRoleAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuiltinRoleAssignment)(nil)).Elem()
}

func (o BuiltinRoleAssignmentMapOutput) ToBuiltinRoleAssignmentMapOutput() BuiltinRoleAssignmentMapOutput {
	return o
}

func (o BuiltinRoleAssignmentMapOutput) ToBuiltinRoleAssignmentMapOutputWithContext(ctx context.Context) BuiltinRoleAssignmentMapOutput {
	return o
}

func (o BuiltinRoleAssignmentMapOutput) MapIndex(k pulumi.StringInput) BuiltinRoleAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BuiltinRoleAssignment {
		return vs[0].(map[string]*BuiltinRoleAssignment)[vs[1].(string)]
	}).(BuiltinRoleAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BuiltinRoleAssignmentInput)(nil)).Elem(), &BuiltinRoleAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuiltinRoleAssignmentArrayInput)(nil)).Elem(), BuiltinRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuiltinRoleAssignmentMapInput)(nil)).Elem(), BuiltinRoleAssignmentMap{})
	pulumi.RegisterOutputType(BuiltinRoleAssignmentOutput{})
	pulumi.RegisterOutputType(BuiltinRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(BuiltinRoleAssignmentMapOutput{})
}
