// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.grafana.outputs.SLOQueryFreeform;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SLOQuery {
    private SLOQueryFreeform freeform;
    /**
     * @return Query type must be one of: &#34;freeform&#34;, &#34;query&#34;, &#34;ratio&#34;, or &#34;threshold&#34;
     * 
     */
    private String type;

    private SLOQuery() {}
    public SLOQueryFreeform freeform() {
        return this.freeform;
    }
    /**
     * @return Query type must be one of: &#34;freeform&#34;, &#34;query&#34;, &#34;ratio&#34;, or &#34;threshold&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SLOQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private SLOQueryFreeform freeform;
        private String type;
        public Builder() {}
        public Builder(SLOQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.freeform = defaults.freeform;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder freeform(SLOQueryFreeform freeform) {
            this.freeform = Objects.requireNonNull(freeform);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SLOQuery build() {
            final var o = new SLOQuery();
            o.freeform = freeform;
            o.type = type;
            return o;
        }
    }
}
