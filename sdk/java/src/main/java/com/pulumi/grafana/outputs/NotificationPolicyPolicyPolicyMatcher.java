// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NotificationPolicyPolicyPolicyMatcher {
    /**
     * @return The name of the label to match against.
     * 
     */
    private String label;
    /**
     * @return The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
     * 
     */
    private String match;
    /**
     * @return The label value to match against.
     * 
     */
    private String value;

    private NotificationPolicyPolicyPolicyMatcher() {}
    /**
     * @return The name of the label to match against.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The operator to apply when matching values of the given label. Allowed operators are `=` for equality, `!=` for negated equality, `=~` for regex equality, and `!~` for negated regex equality.
     * 
     */
    public String match() {
        return this.match;
    }
    /**
     * @return The label value to match against.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationPolicyPolicyPolicyMatcher defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String label;
        private String match;
        private String value;
        public Builder() {}
        public Builder(NotificationPolicyPolicyPolicyMatcher defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.label = defaults.label;
    	      this.match = defaults.match;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder match(String match) {
            this.match = Objects.requireNonNull(match);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public NotificationPolicyPolicyPolicyMatcher build() {
            final var o = new NotificationPolicyPolicyPolicyMatcher();
            o.label = label;
            o.match = match;
            o.value = value;
            return o;
        }
    }
}
