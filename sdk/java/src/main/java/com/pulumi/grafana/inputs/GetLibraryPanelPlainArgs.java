// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLibraryPanelPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLibraryPanelPlainArgs Empty = new GetLibraryPanelPlainArgs();

    /**
     * Name of the library panel.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the library panel.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Organization ID. If not set, the Org ID defined in the provider block will be used.
     * 
     */
    @Import(name="orgId")
    private @Nullable String orgId;

    /**
     * @return The Organization ID. If not set, the Org ID defined in the provider block will be used.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * The unique identifier (UID) of the library panel.
     * 
     */
    @Import(name="uid")
    private @Nullable String uid;

    /**
     * @return The unique identifier (UID) of the library panel.
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }

    private GetLibraryPanelPlainArgs() {}

    private GetLibraryPanelPlainArgs(GetLibraryPanelPlainArgs $) {
        this.name = $.name;
        this.orgId = $.orgId;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLibraryPanelPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLibraryPanelPlainArgs $;

        public Builder() {
            $ = new GetLibraryPanelPlainArgs();
        }

        public Builder(GetLibraryPanelPlainArgs defaults) {
            $ = new GetLibraryPanelPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the library panel.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param orgId The Organization ID. If not set, the Org ID defined in the provider block will be used.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param uid The unique identifier (UID) of the library panel.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable String uid) {
            $.uid = uid;
            return this;
        }

        public GetLibraryPanelPlainArgs build() {
            return $;
        }
    }

}
