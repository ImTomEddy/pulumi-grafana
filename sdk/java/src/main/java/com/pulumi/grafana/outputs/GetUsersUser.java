// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUsersUser {
    private String email;
    private Integer id;
    private Boolean isAdmin;
    private String login;
    private String name;

    private GetUsersUser() {}
    public String email() {
        return this.email;
    }
    public Integer id() {
        return this.id;
    }
    public Boolean isAdmin() {
        return this.isAdmin;
    }
    public String login() {
        return this.login;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private Integer id;
        private Boolean isAdmin;
        private String login;
        private String name;
        public Builder() {}
        public Builder(GetUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.isAdmin = defaults.isAdmin;
    	      this.login = defaults.login;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAdmin(Boolean isAdmin) {
            this.isAdmin = Objects.requireNonNull(isAdmin);
            return this;
        }
        @CustomType.Setter
        public Builder login(String login) {
            this.login = Objects.requireNonNull(login);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetUsersUser build() {
            final var o = new GetUsersUser();
            o.email = email;
            o.id = id;
            o.isAdmin = isAdmin;
            o.login = login;
            o.name = name;
            return o;
        }
    }
}
