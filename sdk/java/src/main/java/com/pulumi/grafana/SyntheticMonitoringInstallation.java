// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.grafana.SyntheticMonitoringInstallationArgs;
import com.pulumi.grafana.Utilities;
import com.pulumi.grafana.inputs.SyntheticMonitoringInstallationState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Sets up Synthetic Monitoring on a Grafana cloud stack and generates a token.
 * Once a Grafana Cloud stack is created, a user can either use this resource or go into the UI to install synthetic monitoring.
 * This resource cannot be imported but it can be used on an existing Synthetic Monitoring installation without issues.
 * 
 * * [Official documentation](https://grafana.com/docs/grafana-cloud/synthetic-monitoring/installation/)
 * * [API documentation](https://github.com/grafana/synthetic-monitoring-api-go-client/blob/main/docs/API.md#apiv1registerinstall)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.grafana.CloudStack;
 * import com.pulumi.grafana.CloudStackArgs;
 * import com.pulumi.grafana.CloudApiKey;
 * import com.pulumi.grafana.CloudApiKeyArgs;
 * import com.pulumi.grafana.SyntheticMonitoringInstallation;
 * import com.pulumi.grafana.SyntheticMonitoringInstallationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var smStackCloudStack = new CloudStack(&#34;smStackCloudStack&#34;, CloudStackArgs.builder()        
 *             .slug(&#34;&lt;stack-slug&gt;&#34;)
 *             .regionSlug(&#34;us&#34;)
 *             .build());
 * 
 *         var metricsPublish = new CloudApiKey(&#34;metricsPublish&#34;, CloudApiKeyArgs.builder()        
 *             .role(&#34;MetricsPublisher&#34;)
 *             .cloudOrgSlug(&#34;&lt;org-slug&gt;&#34;)
 *             .build());
 * 
 *         var smStackSyntheticMonitoringInstallation = new SyntheticMonitoringInstallation(&#34;smStackSyntheticMonitoringInstallation&#34;, SyntheticMonitoringInstallationArgs.builder()        
 *             .stackId(smStackCloudStack.id())
 *             .metricsInstanceId(smStackCloudStack.prometheusUserId())
 *             .logsInstanceId(smStackCloudStack.logsUserId())
 *             .metricsPublisherKey(metricsPublish.key())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="grafana:index/syntheticMonitoringInstallation:SyntheticMonitoringInstallation")
public class SyntheticMonitoringInstallation extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the logs instance to install SM on (stack&#39;s `logs_user_id` attribute).
     * 
     */
    @Export(name="logsInstanceId", type=Integer.class, parameters={})
    private Output<Integer> logsInstanceId;

    /**
     * @return The ID of the logs instance to install SM on (stack&#39;s `logs_user_id` attribute).
     * 
     */
    public Output<Integer> logsInstanceId() {
        return this.logsInstanceId;
    }
    /**
     * The ID of the metrics instance to install SM on (stack&#39;s `prometheus_user_id` attribute).
     * 
     */
    @Export(name="metricsInstanceId", type=Integer.class, parameters={})
    private Output<Integer> metricsInstanceId;

    /**
     * @return The ID of the metrics instance to install SM on (stack&#39;s `prometheus_user_id` attribute).
     * 
     */
    public Output<Integer> metricsInstanceId() {
        return this.metricsInstanceId;
    }
    /**
     * The Cloud API Key with the `MetricsPublisher` role used to publish metrics to the SM API
     * 
     */
    @Export(name="metricsPublisherKey", type=String.class, parameters={})
    private Output<String> metricsPublisherKey;

    /**
     * @return The Cloud API Key with the `MetricsPublisher` role used to publish metrics to the SM API
     * 
     */
    public Output<String> metricsPublisherKey() {
        return this.metricsPublisherKey;
    }
    /**
     * Generated token to access the SM API.
     * 
     */
    @Export(name="smAccessToken", type=String.class, parameters={})
    private Output<String> smAccessToken;

    /**
     * @return Generated token to access the SM API.
     * 
     */
    public Output<String> smAccessToken() {
        return this.smAccessToken;
    }
    /**
     * The ID of the stack to install SM on.
     * 
     */
    @Export(name="stackId", type=Integer.class, parameters={})
    private Output<Integer> stackId;

    /**
     * @return The ID of the stack to install SM on.
     * 
     */
    public Output<Integer> stackId() {
        return this.stackId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SyntheticMonitoringInstallation(String name) {
        this(name, SyntheticMonitoringInstallationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SyntheticMonitoringInstallation(String name, SyntheticMonitoringInstallationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SyntheticMonitoringInstallation(String name, SyntheticMonitoringInstallationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/syntheticMonitoringInstallation:SyntheticMonitoringInstallation", name, args == null ? SyntheticMonitoringInstallationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SyntheticMonitoringInstallation(String name, Output<String> id, @Nullable SyntheticMonitoringInstallationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/syntheticMonitoringInstallation:SyntheticMonitoringInstallation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "metricsPublisherKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SyntheticMonitoringInstallation get(String name, Output<String> id, @Nullable SyntheticMonitoringInstallationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SyntheticMonitoringInstallation(name, id, state, options);
    }
}
