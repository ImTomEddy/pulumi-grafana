// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFolderResult {
    /**
     * @return The numerical ID of the Grafana folder.
     * 
     */
    private Integer id;
    /**
     * @return The name of the Grafana folder.
     * 
     */
    private String title;
    /**
     * @return The uid of the Grafana folder.
     * 
     */
    private String uid;
    /**
     * @return The full URL of the folder.
     * 
     */
    private String url;

    private GetFolderResult() {}
    /**
     * @return The numerical ID of the Grafana folder.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The name of the Grafana folder.
     * 
     */
    public String title() {
        return this.title;
    }
    /**
     * @return The uid of the Grafana folder.
     * 
     */
    public String uid() {
        return this.uid;
    }
    /**
     * @return The full URL of the folder.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFolderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer id;
        private String title;
        private String uid;
        private String url;
        public Builder() {}
        public Builder(GetFolderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.title = defaults.title;
    	      this.uid = defaults.uid;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public GetFolderResult build() {
            final var o = new GetFolderResult();
            o.id = id;
            o.title = title;
            o.uid = uid;
            o.url = url;
            return o;
        }
    }
}
