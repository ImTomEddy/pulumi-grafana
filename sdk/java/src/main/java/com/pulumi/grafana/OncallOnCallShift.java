// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.grafana.OncallOnCallShiftArgs;
import com.pulumi.grafana.Utilities;
import com.pulumi.grafana.inputs.OncallOnCallShiftState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * * [HTTP API](https://grafana.com/docs/grafana-cloud/oncall/oncall-api-reference/on_call_shifts/)
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import grafana:index/oncallOnCallShift:OncallOnCallShift on_call_shift_name {{on_call_shift_id}}
 * ```
 * 
 */
@ResourceType(type="grafana:index/oncallOnCallShift:OncallOnCallShift")
public class OncallOnCallShift extends com.pulumi.resources.CustomResource {
    /**
     * This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
     * 
     */
    @Export(name="byDays", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> byDays;

    /**
     * @return This parameter takes a list of days in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
     * 
     */
    public Output<Optional<List<String>>> byDays() {
        return Codegen.optional(this.byDays);
    }
    /**
     * This parameter takes a list of days of the month.  Valid values are 1 to 31 or -31 to -1
     * 
     */
    @Export(name="byMonthdays", type=List.class, parameters={Integer.class})
    private Output</* @Nullable */ List<Integer>> byMonthdays;

    /**
     * @return This parameter takes a list of days of the month.  Valid values are 1 to 31 or -31 to -1
     * 
     */
    public Output<Optional<List<Integer>>> byMonthdays() {
        return Codegen.optional(this.byMonthdays);
    }
    /**
     * This parameter takes a list of months. Valid values are 1 to 12
     * 
     */
    @Export(name="byMonths", type=List.class, parameters={Integer.class})
    private Output</* @Nullable */ List<Integer>> byMonths;

    /**
     * @return This parameter takes a list of months. Valid values are 1 to 12
     * 
     */
    public Output<Optional<List<Integer>>> byMonths() {
        return Codegen.optional(this.byMonths);
    }
    /**
     * The duration of the event.
     * 
     */
    @Export(name="duration", type=Integer.class, parameters={})
    private Output<Integer> duration;

    /**
     * @return The duration of the event.
     * 
     */
    public Output<Integer> duration() {
        return this.duration;
    }
    /**
     * The frequency of the event. Can be daily, weekly, monthly
     * 
     */
    @Export(name="frequency", type=String.class, parameters={})
    private Output</* @Nullable */ String> frequency;

    /**
     * @return The frequency of the event. Can be daily, weekly, monthly
     * 
     */
    public Output<Optional<String>> frequency() {
        return Codegen.optional(this.frequency);
    }
    /**
     * The positive integer representing at which intervals the recurrence rule repeats.
     * 
     */
    @Export(name="interval", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> interval;

    /**
     * @return The positive integer representing at which intervals the recurrence rule repeats.
     * 
     */
    public Output<Optional<Integer>> interval() {
        return Codegen.optional(this.interval);
    }
    /**
     * The priority level. The higher the value, the higher the priority.
     * 
     */
    @Export(name="level", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> level;

    /**
     * @return The priority level. The higher the value, the higher the priority.
     * 
     */
    public Output<Optional<Integer>> level() {
        return Codegen.optional(this.level);
    }
    /**
     * The shift&#39;s name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The shift&#39;s name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The list of lists with on-call users (for rolling_users event type)
     * 
     */
    @Export(name="rollingUsers", type=List.class, parameters={List.class})
    private Output</* @Nullable */ List<List<String>>> rollingUsers;

    /**
     * @return The list of lists with on-call users (for rolling_users event type)
     * 
     */
    public Output<Optional<List<List<String>>>> rollingUsers() {
        return Codegen.optional(this.rollingUsers);
    }
    /**
     * The start time of the on-call shift. This parameter takes a date format as yyyy-MM-dd&#39;T&#39;HH:mm:ss (for example &#34;2020-09-05T08:00:00&#34;)
     * 
     */
    @Export(name="start", type=String.class, parameters={})
    private Output<String> start;

    /**
     * @return The start time of the on-call shift. This parameter takes a date format as yyyy-MM-dd&#39;T&#39;HH:mm:ss (for example &#34;2020-09-05T08:00:00&#34;)
     * 
     */
    public Output<String> start() {
        return this.start;
    }
    /**
     * The index of the list of users in rolling_users, from which on-call rotation starts.
     * 
     */
    @Export(name="startRotationFromUserIndex", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> startRotationFromUserIndex;

    /**
     * @return The index of the list of users in rolling_users, from which on-call rotation starts.
     * 
     */
    public Output<Optional<Integer>> startRotationFromUserIndex() {
        return Codegen.optional(this.startRotationFromUserIndex);
    }
    /**
     * The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana.getOncallTeam` datasource.
     * 
     */
    @Export(name="teamId", type=String.class, parameters={})
    private Output</* @Nullable */ String> teamId;

    /**
     * @return The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana.getOncallTeam` datasource.
     * 
     */
    public Output<Optional<String>> teamId() {
        return Codegen.optional(this.teamId);
    }
    /**
     * The shift&#39;s timezone.  Overrides schedule&#39;s timezone.
     * 
     */
    @Export(name="timeZone", type=String.class, parameters={})
    private Output</* @Nullable */ String> timeZone;

    /**
     * @return The shift&#39;s timezone.  Overrides schedule&#39;s timezone.
     * 
     */
    public Output<Optional<String>> timeZone() {
        return Codegen.optional(this.timeZone);
    }
    /**
     * The shift&#39;s type. Can be rolling*users, recurrent*event, single_event
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The shift&#39;s type. Can be rolling*users, recurrent*event, single_event
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The list of on-call users (for single*event and recurrent*event event type).
     * 
     */
    @Export(name="users", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> users;

    /**
     * @return The list of on-call users (for single*event and recurrent*event event type).
     * 
     */
    public Output<Optional<List<String>>> users() {
        return Codegen.optional(this.users);
    }
    /**
     * Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
     * 
     */
    @Export(name="weekStart", type=String.class, parameters={})
    private Output</* @Nullable */ String> weekStart;

    /**
     * @return Start day of the week in iCal format. Can be MO, TU, WE, TH, FR, SA, SU
     * 
     */
    public Output<Optional<String>> weekStart() {
        return Codegen.optional(this.weekStart);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OncallOnCallShift(String name) {
        this(name, OncallOnCallShiftArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OncallOnCallShift(String name, OncallOnCallShiftArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OncallOnCallShift(String name, OncallOnCallShiftArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/oncallOnCallShift:OncallOnCallShift", name, args == null ? OncallOnCallShiftArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OncallOnCallShift(String name, Output<String> id, @Nullable OncallOnCallShiftState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/oncallOnCallShift:OncallOnCallShift", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OncallOnCallShift get(String name, Output<String> id, @Nullable OncallOnCallShiftState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OncallOnCallShift(name, id, state, options);
    }
}
