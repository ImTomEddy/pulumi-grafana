// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContactPointPagerduty {
    /**
     * @return The class or type of event, for example `ping failure`.
     * 
     */
    private @Nullable String class_;
    /**
     * @return The name of the monitoring client that is triggering this event.
     * 
     */
    private @Nullable String client;
    /**
     * @return The URL of the monitoring client that is triggering this event.
     * 
     */
    private @Nullable String clientUrl;
    /**
     * @return The component being affected by the event.
     * 
     */
    private @Nullable String component;
    /**
     * @return A set of arbitrary key/value pairs that provide further detail about the incident.
     * 
     */
    private @Nullable Map<String,String> details;
    /**
     * @return Whether to disable sending resolve messages. Defaults to `false`.
     * 
     */
    private @Nullable Boolean disableResolveMessage;
    /**
     * @return The group to which the provided component belongs to.
     * 
     */
    private @Nullable String group;
    /**
     * @return The PagerDuty API key.
     * 
     */
    private String integrationKey;
    /**
     * @return Additional custom properties to attach to the notifier. Defaults to `map[]`.
     * 
     */
    private @Nullable Map<String,String> settings;
    /**
     * @return The PagerDuty event severity level. Default is `critical`.
     * 
     */
    private @Nullable String severity;
    /**
     * @return The unique location of the affected system.
     * 
     */
    private @Nullable String source;
    /**
     * @return The templated summary message of the event.
     * 
     */
    private @Nullable String summary;
    /**
     * @return The UID of the contact point.
     * 
     */
    private @Nullable String uid;

    private ContactPointPagerduty() {}
    /**
     * @return The class or type of event, for example `ping failure`.
     * 
     */
    public Optional<String> class_() {
        return Optional.ofNullable(this.class_);
    }
    /**
     * @return The name of the monitoring client that is triggering this event.
     * 
     */
    public Optional<String> client() {
        return Optional.ofNullable(this.client);
    }
    /**
     * @return The URL of the monitoring client that is triggering this event.
     * 
     */
    public Optional<String> clientUrl() {
        return Optional.ofNullable(this.clientUrl);
    }
    /**
     * @return The component being affected by the event.
     * 
     */
    public Optional<String> component() {
        return Optional.ofNullable(this.component);
    }
    /**
     * @return A set of arbitrary key/value pairs that provide further detail about the incident.
     * 
     */
    public Map<String,String> details() {
        return this.details == null ? Map.of() : this.details;
    }
    /**
     * @return Whether to disable sending resolve messages. Defaults to `false`.
     * 
     */
    public Optional<Boolean> disableResolveMessage() {
        return Optional.ofNullable(this.disableResolveMessage);
    }
    /**
     * @return The group to which the provided component belongs to.
     * 
     */
    public Optional<String> group() {
        return Optional.ofNullable(this.group);
    }
    /**
     * @return The PagerDuty API key.
     * 
     */
    public String integrationKey() {
        return this.integrationKey;
    }
    /**
     * @return Additional custom properties to attach to the notifier. Defaults to `map[]`.
     * 
     */
    public Map<String,String> settings() {
        return this.settings == null ? Map.of() : this.settings;
    }
    /**
     * @return The PagerDuty event severity level. Default is `critical`.
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return The unique location of the affected system.
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return The templated summary message of the event.
     * 
     */
    public Optional<String> summary() {
        return Optional.ofNullable(this.summary);
    }
    /**
     * @return The UID of the contact point.
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactPointPagerduty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String class_;
        private @Nullable String client;
        private @Nullable String clientUrl;
        private @Nullable String component;
        private @Nullable Map<String,String> details;
        private @Nullable Boolean disableResolveMessage;
        private @Nullable String group;
        private String integrationKey;
        private @Nullable Map<String,String> settings;
        private @Nullable String severity;
        private @Nullable String source;
        private @Nullable String summary;
        private @Nullable String uid;
        public Builder() {}
        public Builder(ContactPointPagerduty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.class_ = defaults.class_;
    	      this.client = defaults.client;
    	      this.clientUrl = defaults.clientUrl;
    	      this.component = defaults.component;
    	      this.details = defaults.details;
    	      this.disableResolveMessage = defaults.disableResolveMessage;
    	      this.group = defaults.group;
    	      this.integrationKey = defaults.integrationKey;
    	      this.settings = defaults.settings;
    	      this.severity = defaults.severity;
    	      this.source = defaults.source;
    	      this.summary = defaults.summary;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter("class")
        public Builder class_(@Nullable String class_) {
            this.class_ = class_;
            return this;
        }
        @CustomType.Setter
        public Builder client(@Nullable String client) {
            this.client = client;
            return this;
        }
        @CustomType.Setter
        public Builder clientUrl(@Nullable String clientUrl) {
            this.clientUrl = clientUrl;
            return this;
        }
        @CustomType.Setter
        public Builder component(@Nullable String component) {
            this.component = component;
            return this;
        }
        @CustomType.Setter
        public Builder details(@Nullable Map<String,String> details) {
            this.details = details;
            return this;
        }
        @CustomType.Setter
        public Builder disableResolveMessage(@Nullable Boolean disableResolveMessage) {
            this.disableResolveMessage = disableResolveMessage;
            return this;
        }
        @CustomType.Setter
        public Builder group(@Nullable String group) {
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder integrationKey(String integrationKey) {
            this.integrationKey = Objects.requireNonNull(integrationKey);
            return this;
        }
        @CustomType.Setter
        public Builder settings(@Nullable Map<String,String> settings) {
            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder summary(@Nullable String summary) {
            this.summary = summary;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        public ContactPointPagerduty build() {
            final var o = new ContactPointPagerduty();
            o.class_ = class_;
            o.client = client;
            o.clientUrl = clientUrl;
            o.component = component;
            o.details = details;
            o.disableResolveMessage = disableResolveMessage;
            o.group = group;
            o.integrationKey = integrationKey;
            o.settings = settings;
            o.severity = severity;
            o.source = source;
            o.summary = summary;
            o.uid = uid;
            return o;
        }
    }
}
