// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.grafana.inputs.SLOAlertingAnnotationArgs;
import com.pulumi.grafana.inputs.SLOAlertingFastburnArgs;
import com.pulumi.grafana.inputs.SLOAlertingLabelArgs;
import com.pulumi.grafana.inputs.SLOAlertingSlowburnArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SLOAlertingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SLOAlertingArgs Empty = new SLOAlertingArgs();

    /**
     * Annotations will be attached to all alerts generated by any of these rules.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<List<SLOAlertingAnnotationArgs>> annotations;

    /**
     * @return Annotations will be attached to all alerts generated by any of these rules.
     * 
     */
    public Optional<Output<List<SLOAlertingAnnotationArgs>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Alerting Rules generated for Fast Burn alerts
     * 
     */
    @Import(name="fastburns")
    private @Nullable Output<List<SLOAlertingFastburnArgs>> fastburns;

    /**
     * @return Alerting Rules generated for Fast Burn alerts
     * 
     */
    public Optional<Output<List<SLOAlertingFastburnArgs>>> fastburns() {
        return Optional.ofNullable(this.fastburns);
    }

    /**
     * Labels will be attached to all alerts generated by any of these rules.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<SLOAlertingLabelArgs>> labels;

    /**
     * @return Labels will be attached to all alerts generated by any of these rules.
     * 
     */
    public Optional<Output<List<SLOAlertingLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Alerting Rules generated for Slow Burn alerts
     * 
     */
    @Import(name="slowburns")
    private @Nullable Output<List<SLOAlertingSlowburnArgs>> slowburns;

    /**
     * @return Alerting Rules generated for Slow Burn alerts
     * 
     */
    public Optional<Output<List<SLOAlertingSlowburnArgs>>> slowburns() {
        return Optional.ofNullable(this.slowburns);
    }

    private SLOAlertingArgs() {}

    private SLOAlertingArgs(SLOAlertingArgs $) {
        this.annotations = $.annotations;
        this.fastburns = $.fastburns;
        this.labels = $.labels;
        this.slowburns = $.slowburns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SLOAlertingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SLOAlertingArgs $;

        public Builder() {
            $ = new SLOAlertingArgs();
        }

        public Builder(SLOAlertingArgs defaults) {
            $ = new SLOAlertingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Annotations will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<List<SLOAlertingAnnotationArgs>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder annotations(List<SLOAlertingAnnotationArgs> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param annotations Annotations will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder annotations(SLOAlertingAnnotationArgs... annotations) {
            return annotations(List.of(annotations));
        }

        /**
         * @param fastburns Alerting Rules generated for Fast Burn alerts
         * 
         * @return builder
         * 
         */
        public Builder fastburns(@Nullable Output<List<SLOAlertingFastburnArgs>> fastburns) {
            $.fastburns = fastburns;
            return this;
        }

        /**
         * @param fastburns Alerting Rules generated for Fast Burn alerts
         * 
         * @return builder
         * 
         */
        public Builder fastburns(List<SLOAlertingFastburnArgs> fastburns) {
            return fastburns(Output.of(fastburns));
        }

        /**
         * @param fastburns Alerting Rules generated for Fast Burn alerts
         * 
         * @return builder
         * 
         */
        public Builder fastburns(SLOAlertingFastburnArgs... fastburns) {
            return fastburns(List.of(fastburns));
        }

        /**
         * @param labels Labels will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<SLOAlertingLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<SLOAlertingLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels Labels will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder labels(SLOAlertingLabelArgs... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param slowburns Alerting Rules generated for Slow Burn alerts
         * 
         * @return builder
         * 
         */
        public Builder slowburns(@Nullable Output<List<SLOAlertingSlowburnArgs>> slowburns) {
            $.slowburns = slowburns;
            return this;
        }

        /**
         * @param slowburns Alerting Rules generated for Slow Burn alerts
         * 
         * @return builder
         * 
         */
        public Builder slowburns(List<SLOAlertingSlowburnArgs> slowburns) {
            return slowburns(Output.of(slowburns));
        }

        /**
         * @param slowburns Alerting Rules generated for Slow Burn alerts
         * 
         * @return builder
         * 
         */
        public Builder slowburns(SLOAlertingSlowburnArgs... slowburns) {
            return slowburns(List.of(slowburns));
        }

        public SLOAlertingArgs build() {
            return $;
        }
    }

}
