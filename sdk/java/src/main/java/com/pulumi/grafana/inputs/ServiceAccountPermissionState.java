// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.grafana.inputs.ServiceAccountPermissionPermissionArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceAccountPermissionState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceAccountPermissionState Empty = new ServiceAccountPermissionState();

    /**
     * The permission items to add/update. Items that are omitted from the list will be removed.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<ServiceAccountPermissionPermissionArgs>> permissions;

    /**
     * @return The permission items to add/update. Items that are omitted from the list will be removed.
     * 
     */
    public Optional<Output<List<ServiceAccountPermissionPermissionArgs>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * The id of the service account.
     * 
     */
    @Import(name="serviceAccountId")
    private @Nullable Output<Integer> serviceAccountId;

    /**
     * @return The id of the service account.
     * 
     */
    public Optional<Output<Integer>> serviceAccountId() {
        return Optional.ofNullable(this.serviceAccountId);
    }

    private ServiceAccountPermissionState() {}

    private ServiceAccountPermissionState(ServiceAccountPermissionState $) {
        this.permissions = $.permissions;
        this.serviceAccountId = $.serviceAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceAccountPermissionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceAccountPermissionState $;

        public Builder() {
            $ = new ServiceAccountPermissionState();
        }

        public Builder(ServiceAccountPermissionState defaults) {
            $ = new ServiceAccountPermissionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param permissions The permission items to add/update. Items that are omitted from the list will be removed.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<ServiceAccountPermissionPermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The permission items to add/update. Items that are omitted from the list will be removed.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<ServiceAccountPermissionPermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions The permission items to add/update. Items that are omitted from the list will be removed.
         * 
         * @return builder
         * 
         */
        public Builder permissions(ServiceAccountPermissionPermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param serviceAccountId The id of the service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountId(@Nullable Output<Integer> serviceAccountId) {
            $.serviceAccountId = serviceAccountId;
            return this;
        }

        /**
         * @param serviceAccountId The id of the service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountId(Integer serviceAccountId) {
            return serviceAccountId(Output.of(serviceAccountId));
        }

        public ServiceAccountPermissionState build() {
            return $;
        }
    }

}
