// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.grafana.OncallRouteArgs;
import com.pulumi.grafana.Utilities;
import com.pulumi.grafana.inputs.OncallRouteState;
import com.pulumi.grafana.outputs.OncallRouteMsteams;
import com.pulumi.grafana.outputs.OncallRouteSlack;
import com.pulumi.grafana.outputs.OncallRouteTelegram;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/routes/)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.grafana.GrafanaFunctions;
 * import com.pulumi.grafana.inputs.GetOnCallSlackChannelArgs;
 * import com.pulumi.grafana.OncallEscalationChain;
 * import com.pulumi.grafana.OncallIntegration;
 * import com.pulumi.grafana.OncallIntegrationArgs;
 * import com.pulumi.grafana.OncallRoute;
 * import com.pulumi.grafana.OncallRouteArgs;
 * import com.pulumi.grafana.inputs.OncallRouteSlackArgs;
 * import com.pulumi.grafana.inputs.OncallRouteTelegramArgs;
 * import com.pulumi.grafana.inputs.OncallRouteMsteamsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleSlackChannel = GrafanaFunctions.getOnCallSlackChannel(GetOnCallSlackChannelArgs.builder()
 *             .name(&#34;example_slack_channel&#34;)
 *             .build());
 * 
 *         var default_ = new OncallEscalationChain(&#34;default&#34;);
 * 
 *         var exampleIntegration = new OncallIntegration(&#34;exampleIntegration&#34;, OncallIntegrationArgs.builder()        
 *             .type(&#34;grafana&#34;)
 *             .build());
 * 
 *         var exampleRoute = new OncallRoute(&#34;exampleRoute&#34;, OncallRouteArgs.builder()        
 *             .integrationId(exampleIntegration.id())
 *             .escalationChainId(default_.id())
 *             .routingRegex(&#34;us-(east|west)&#34;)
 *             .position(0)
 *             .slack(OncallRouteSlackArgs.builder()
 *                 .channelId(exampleSlackChannel.applyValue(getOnCallSlackChannelResult -&gt; getOnCallSlackChannelResult.slackId()))
 *                 .enabled(true)
 *                 .build())
 *             .telegram(OncallRouteTelegramArgs.builder()
 *                 .id(&#34;ONCALLTELEGRAMID&#34;)
 *                 .enabled(true)
 *                 .build())
 *             .msteams(OncallRouteMsteamsArgs.builder()
 *                 .id(&#34;ONCALLMSTEAMSID&#34;)
 *                 .enabled(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import grafana:index/oncallRoute:OncallRoute route_name {{route_id}}
 * ```
 * 
 */
@ResourceType(type="grafana:index/oncallRoute:OncallRoute")
public class OncallRoute extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the escalation chain.
     * 
     */
    @Export(name="escalationChainId", refs={String.class}, tree="[0]")
    private Output<String> escalationChainId;

    /**
     * @return The ID of the escalation chain.
     * 
     */
    public Output<String> escalationChainId() {
        return this.escalationChainId;
    }
    /**
     * The ID of the integration.
     * 
     */
    @Export(name="integrationId", refs={String.class}, tree="[0]")
    private Output<String> integrationId;

    /**
     * @return The ID of the integration.
     * 
     */
    public Output<String> integrationId() {
        return this.integrationId;
    }
    /**
     * MS teams-specific settings for a route.
     * 
     */
    @Export(name="msteams", refs={OncallRouteMsteams.class}, tree="[0]")
    private Output</* @Nullable */ OncallRouteMsteams> msteams;

    /**
     * @return MS teams-specific settings for a route.
     * 
     */
    public Output<Optional<OncallRouteMsteams>> msteams() {
        return Codegen.optional(this.msteams);
    }
    /**
     * The position of the route (starts from 0).
     * 
     */
    @Export(name="position", refs={Integer.class}, tree="[0]")
    private Output<Integer> position;

    /**
     * @return The position of the route (starts from 0).
     * 
     */
    public Output<Integer> position() {
        return this.position;
    }
    /**
     * Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
     * 
     */
    @Export(name="routingRegex", refs={String.class}, tree="[0]")
    private Output<String> routingRegex;

    /**
     * @return Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
     * 
     */
    public Output<String> routingRegex() {
        return this.routingRegex;
    }
    /**
     * Slack-specific settings for a route.
     * 
     */
    @Export(name="slack", refs={OncallRouteSlack.class}, tree="[0]")
    private Output</* @Nullable */ OncallRouteSlack> slack;

    /**
     * @return Slack-specific settings for a route.
     * 
     */
    public Output<Optional<OncallRouteSlack>> slack() {
        return Codegen.optional(this.slack);
    }
    /**
     * Telegram-specific settings for a route.
     * 
     */
    @Export(name="telegram", refs={OncallRouteTelegram.class}, tree="[0]")
    private Output</* @Nullable */ OncallRouteTelegram> telegram;

    /**
     * @return Telegram-specific settings for a route.
     * 
     */
    public Output<Optional<OncallRouteTelegram>> telegram() {
        return Codegen.optional(this.telegram);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OncallRoute(String name) {
        this(name, OncallRouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OncallRoute(String name, OncallRouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OncallRoute(String name, OncallRouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/oncallRoute:OncallRoute", name, args == null ? OncallRouteArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OncallRoute(String name, Output<String> id, @Nullable OncallRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/oncallRoute:OncallRoute", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OncallRoute get(String name, Output<String> id, @Nullable OncallRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OncallRoute(name, id, state, options);
    }
}
