// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudStackServiceAccountTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudStackServiceAccountTokenArgs Empty = new CloudStackServiceAccountTokenArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="secondsToLive")
    private @Nullable Output<Integer> secondsToLive;

    public Optional<Output<Integer>> secondsToLive() {
        return Optional.ofNullable(this.secondsToLive);
    }

    @Import(name="serviceAccountId", required=true)
    private Output<String> serviceAccountId;

    public Output<String> serviceAccountId() {
        return this.serviceAccountId;
    }

    @Import(name="stackSlug", required=true)
    private Output<String> stackSlug;

    public Output<String> stackSlug() {
        return this.stackSlug;
    }

    private CloudStackServiceAccountTokenArgs() {}

    private CloudStackServiceAccountTokenArgs(CloudStackServiceAccountTokenArgs $) {
        this.name = $.name;
        this.secondsToLive = $.secondsToLive;
        this.serviceAccountId = $.serviceAccountId;
        this.stackSlug = $.stackSlug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudStackServiceAccountTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudStackServiceAccountTokenArgs $;

        public Builder() {
            $ = new CloudStackServiceAccountTokenArgs();
        }

        public Builder(CloudStackServiceAccountTokenArgs defaults) {
            $ = new CloudStackServiceAccountTokenArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder secondsToLive(@Nullable Output<Integer> secondsToLive) {
            $.secondsToLive = secondsToLive;
            return this;
        }

        public Builder secondsToLive(Integer secondsToLive) {
            return secondsToLive(Output.of(secondsToLive));
        }

        public Builder serviceAccountId(Output<String> serviceAccountId) {
            $.serviceAccountId = serviceAccountId;
            return this;
        }

        public Builder serviceAccountId(String serviceAccountId) {
            return serviceAccountId(Output.of(serviceAccountId));
        }

        public Builder stackSlug(Output<String> stackSlug) {
            $.stackSlug = stackSlug;
            return this;
        }

        public Builder stackSlug(String stackSlug) {
            return stackSlug(Output.of(stackSlug));
        }

        public CloudStackServiceAccountTokenArgs build() {
            $.serviceAccountId = Objects.requireNonNull($.serviceAccountId, "expected parameter 'serviceAccountId' to be non-null");
            $.stackSlug = Objects.requireNonNull($.stackSlug, "expected parameter 'stackSlug' to be non-null");
            return $;
        }
    }

}
