// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudApiKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudApiKeyArgs Empty = new CloudApiKeyArgs();

    /**
     * The slug of the organization to create the API key in. This is the same slug as the organization name in the URL.
     * 
     */
    @Import(name="cloudOrgSlug", required=true)
    private Output<String> cloudOrgSlug;

    /**
     * @return The slug of the organization to create the API key in. This is the same slug as the organization name in the URL.
     * 
     */
    public Output<String> cloudOrgSlug() {
        return this.cloudOrgSlug;
    }

    /**
     * Name of the API key.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the API key.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Role of the API key. Should be one of [Viewer Editor Admin MetricsPublisher PluginPublisher]. See https://grafana.com/docs/grafana-cloud/api/#create-api-key for details.
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return Role of the API key. Should be one of [Viewer Editor Admin MetricsPublisher PluginPublisher]. See https://grafana.com/docs/grafana-cloud/api/#create-api-key for details.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    private CloudApiKeyArgs() {}

    private CloudApiKeyArgs(CloudApiKeyArgs $) {
        this.cloudOrgSlug = $.cloudOrgSlug;
        this.name = $.name;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudApiKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudApiKeyArgs $;

        public Builder() {
            $ = new CloudApiKeyArgs();
        }

        public Builder(CloudApiKeyArgs defaults) {
            $ = new CloudApiKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudOrgSlug The slug of the organization to create the API key in. This is the same slug as the organization name in the URL.
         * 
         * @return builder
         * 
         */
        public Builder cloudOrgSlug(Output<String> cloudOrgSlug) {
            $.cloudOrgSlug = cloudOrgSlug;
            return this;
        }

        /**
         * @param cloudOrgSlug The slug of the organization to create the API key in. This is the same slug as the organization name in the URL.
         * 
         * @return builder
         * 
         */
        public Builder cloudOrgSlug(String cloudOrgSlug) {
            return cloudOrgSlug(Output.of(cloudOrgSlug));
        }

        /**
         * @param name Name of the API key.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the API key.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param role Role of the API key. Should be one of [Viewer Editor Admin MetricsPublisher PluginPublisher]. See https://grafana.com/docs/grafana-cloud/api/#create-api-key for details.
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role of the API key. Should be one of [Viewer Editor Admin MetricsPublisher PluginPublisher]. See https://grafana.com/docs/grafana-cloud/api/#create-api-key for details.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public CloudApiKeyArgs build() {
            $.cloudOrgSlug = Objects.requireNonNull($.cloudOrgSlug, "expected parameter 'cloudOrgSlug' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            return $;
        }
    }

}
