// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class SLOObjectiveArgs extends com.pulumi.resources.ResourceArgs {

    public static final SLOObjectiveArgs Empty = new SLOObjectiveArgs();

    /**
     * Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
     * 
     */
    @Import(name="value", required=true)
    private Output<Double> value;

    /**
     * @return Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
     * 
     */
    public Output<Double> value() {
        return this.value;
    }

    /**
     * A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
     * 
     */
    @Import(name="window", required=true)
    private Output<String> window;

    /**
     * @return A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
     * 
     */
    public Output<String> window() {
        return this.window;
    }

    private SLOObjectiveArgs() {}

    private SLOObjectiveArgs(SLOObjectiveArgs $) {
        this.value = $.value;
        this.window = $.window;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SLOObjectiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SLOObjectiveArgs $;

        public Builder() {
            $ = new SLOObjectiveArgs();
        }

        public Builder(SLOObjectiveArgs defaults) {
            $ = new SLOObjectiveArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param value Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<Double> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
         * 
         * @return builder
         * 
         */
        public Builder value(Double value) {
            return value(Output.of(value));
        }

        /**
         * @param window A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
         * 
         * @return builder
         * 
         */
        public Builder window(Output<String> window) {
            $.window = window;
            return this;
        }

        /**
         * @param window A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
         * 
         * @return builder
         * 
         */
        public Builder window(String window) {
            return window(Output.of(window));
        }

        public SLOObjectiveArgs build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            $.window = Objects.requireNonNull($.window, "expected parameter 'window' to be non-null");
            return $;
        }
    }

}
