// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.grafana.inputs.PlaylistItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlaylistState extends com.pulumi.resources.ResourceArgs {

    public static final PlaylistState Empty = new PlaylistState();

    @Import(name="interval")
    private @Nullable Output<String> interval;

    public Optional<Output<String>> interval() {
        return Optional.ofNullable(this.interval);
    }

    @Import(name="items")
    private @Nullable Output<List<PlaylistItemArgs>> items;

    public Optional<Output<List<PlaylistItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * The name of the playlist.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the playlist.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    private PlaylistState() {}

    private PlaylistState(PlaylistState $) {
        this.interval = $.interval;
        this.items = $.items;
        this.name = $.name;
        this.orgId = $.orgId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlaylistState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlaylistState $;

        public Builder() {
            $ = new PlaylistState();
        }

        public Builder(PlaylistState defaults) {
            $ = new PlaylistState(Objects.requireNonNull(defaults));
        }

        public Builder interval(@Nullable Output<String> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(String interval) {
            return interval(Output.of(interval));
        }

        public Builder items(@Nullable Output<List<PlaylistItemArgs>> items) {
            $.items = items;
            return this;
        }

        public Builder items(List<PlaylistItemArgs> items) {
            return items(Output.of(items));
        }

        public Builder items(PlaylistItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param name The name of the playlist.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the playlist.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public PlaylistState build() {
            return $;
        }
    }

}
