// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RolePermission {
    /**
     * @return Specific action users granted with the role will be allowed to perform (for example: `users:read`)
     * 
     */
    private String action;
    /**
     * @return Scope to restrict the action to a set of resources (for example: `users:*` or `roles:customrole1`)
     * 
     */
    private @Nullable String scope;

    private RolePermission() {}
    /**
     * @return Specific action users granted with the role will be allowed to perform (for example: `users:read`)
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Scope to restrict the action to a set of resources (for example: `users:*` or `roles:customrole1`)
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RolePermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable String scope;
        public Builder() {}
        public Builder(RolePermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        public RolePermission build() {
            final var o = new RolePermission();
            o.action = action;
            o.scope = scope;
            return o;
        }
    }
}
