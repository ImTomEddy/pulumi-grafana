// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamArgs Empty = new GetTeamArgs();

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    @Import(name="readTeamSync")
    private @Nullable Output<Boolean> readTeamSync;

    public Optional<Output<Boolean>> readTeamSync() {
        return Optional.ofNullable(this.readTeamSync);
    }

    private GetTeamArgs() {}

    private GetTeamArgs(GetTeamArgs $) {
        this.name = $.name;
        this.orgId = $.orgId;
        this.readTeamSync = $.readTeamSync;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamArgs $;

        public Builder() {
            $ = new GetTeamArgs();
        }

        public Builder(GetTeamArgs defaults) {
            $ = new GetTeamArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public Builder readTeamSync(@Nullable Output<Boolean> readTeamSync) {
            $.readTeamSync = readTeamSync;
            return this;
        }

        public Builder readTeamSync(Boolean readTeamSync) {
            return readTeamSync(Output.of(readTeamSync));
        }

        public GetTeamArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
