// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.grafana.outputs.SLOAlertingFastburnAnnotation;
import com.pulumi.grafana.outputs.SLOAlertingFastburnLabel;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SLOAlertingFastburn {
    /**
     * @return Annotations will be attached to all alerts generated by any of these rules.
     * 
     */
    private @Nullable List<SLOAlertingFastburnAnnotation> annotations;
    /**
     * @return Labels to attach only to Fast Burn alerts.
     * 
     */
    private @Nullable List<SLOAlertingFastburnLabel> labels;

    private SLOAlertingFastburn() {}
    /**
     * @return Annotations will be attached to all alerts generated by any of these rules.
     * 
     */
    public List<SLOAlertingFastburnAnnotation> annotations() {
        return this.annotations == null ? List.of() : this.annotations;
    }
    /**
     * @return Labels to attach only to Fast Burn alerts.
     * 
     */
    public List<SLOAlertingFastburnLabel> labels() {
        return this.labels == null ? List.of() : this.labels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SLOAlertingFastburn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SLOAlertingFastburnAnnotation> annotations;
        private @Nullable List<SLOAlertingFastburnLabel> labels;
        public Builder() {}
        public Builder(SLOAlertingFastburn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.labels = defaults.labels;
        }

        @CustomType.Setter
        public Builder annotations(@Nullable List<SLOAlertingFastburnAnnotation> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(SLOAlertingFastburnAnnotation... annotations) {
            return annotations(List.of(annotations));
        }
        @CustomType.Setter
        public Builder labels(@Nullable List<SLOAlertingFastburnLabel> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(SLOAlertingFastburnLabel... labels) {
            return labels(List.of(labels));
        }
        public SLOAlertingFastburn build() {
            final var o = new SLOAlertingFastburn();
            o.annotations = annotations;
            o.labels = labels;
            return o;
        }
    }
}
