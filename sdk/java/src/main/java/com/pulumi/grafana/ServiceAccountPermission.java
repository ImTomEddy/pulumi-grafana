// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.grafana.ServiceAccountPermissionArgs;
import com.pulumi.grafana.Utilities;
import com.pulumi.grafana.inputs.ServiceAccountPermissionState;
import com.pulumi.grafana.outputs.ServiceAccountPermissionPermission;
import java.lang.Integer;
import java.util.List;
import javax.annotation.Nullable;

/**
 * **Note:** This resource is available from Grafana 9.2.4 onwards.
 * 
 * * [Official documentation](https://grafana.com/docs/grafana/latest/administration/service-accounts/#manage-users-and-teams-permissions-for-a-service-account-in-grafana)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.grafana.ServiceAccount;
 * import com.pulumi.grafana.ServiceAccountArgs;
 * import com.pulumi.grafana.Team;
 * import com.pulumi.grafana.User;
 * import com.pulumi.grafana.UserArgs;
 * import com.pulumi.grafana.ServiceAccountPermission;
 * import com.pulumi.grafana.ServiceAccountPermissionArgs;
 * import com.pulumi.grafana.inputs.ServiceAccountPermissionPermissionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ServiceAccount(&#34;test&#34;, ServiceAccountArgs.builder()        
 *             .role(&#34;Editor&#34;)
 *             .isDisabled(false)
 *             .build());
 * 
 *         var testTeam = new Team(&#34;testTeam&#34;);
 * 
 *         var testUser = new User(&#34;testUser&#34;, UserArgs.builder()        
 *             .email(&#34;tf_user@test.com&#34;)
 *             .login(&#34;tf_user@test.com&#34;)
 *             .password(&#34;password&#34;)
 *             .build());
 * 
 *         var testPermissions = new ServiceAccountPermission(&#34;testPermissions&#34;, ServiceAccountPermissionArgs.builder()        
 *             .serviceAccountId(test.id())
 *             .permissions(            
 *                 ServiceAccountPermissionPermissionArgs.builder()
 *                     .userId(testUser.id())
 *                     .permission(&#34;Edit&#34;)
 *                     .build(),
 *                 ServiceAccountPermissionPermissionArgs.builder()
 *                     .teamId(testTeam.id())
 *                     .permission(&#34;Admin&#34;)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="grafana:index/serviceAccountPermission:ServiceAccountPermission")
public class ServiceAccountPermission extends com.pulumi.resources.CustomResource {
    /**
     * The permission items to add/update. Items that are omitted from the list will be removed.
     * 
     */
    @Export(name="permissions", type=List.class, parameters={ServiceAccountPermissionPermission.class})
    private Output<List<ServiceAccountPermissionPermission>> permissions;

    /**
     * @return The permission items to add/update. Items that are omitted from the list will be removed.
     * 
     */
    public Output<List<ServiceAccountPermissionPermission>> permissions() {
        return this.permissions;
    }
    /**
     * The id of the service account.
     * 
     */
    @Export(name="serviceAccountId", type=Integer.class, parameters={})
    private Output<Integer> serviceAccountId;

    /**
     * @return The id of the service account.
     * 
     */
    public Output<Integer> serviceAccountId() {
        return this.serviceAccountId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceAccountPermission(String name) {
        this(name, ServiceAccountPermissionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceAccountPermission(String name, ServiceAccountPermissionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceAccountPermission(String name, ServiceAccountPermissionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/serviceAccountPermission:ServiceAccountPermission", name, args == null ? ServiceAccountPermissionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceAccountPermission(String name, Output<String> id, @Nullable ServiceAccountPermissionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/serviceAccountPermission:ServiceAccountPermission", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceAccountPermission get(String name, Output<String> id, @Nullable ServiceAccountPermissionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceAccountPermission(name, id, state, options);
    }
}
