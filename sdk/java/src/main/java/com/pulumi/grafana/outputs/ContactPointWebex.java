// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContactPointWebex {
    /**
     * @return The URL to send webhook requests to.
     * 
     */
    private @Nullable String apiUrl;
    /**
     * @return Whether to disable sending resolve messages. Defaults to `false`.
     * 
     */
    private @Nullable Boolean disableResolveMessage;
    /**
     * @return The templated title of the message to send.
     * 
     */
    private @Nullable String message;
    /**
     * @return ID of the Webex Teams room where to send the messages.
     * 
     */
    private @Nullable String roomId;
    /**
     * @return Additional custom properties to attach to the notifier. Defaults to `map[]`.
     * 
     */
    private @Nullable Map<String,String> settings;
    /**
     * @return The bearer token used to authorize the client.
     * 
     */
    private @Nullable String token;
    /**
     * @return The UID of the contact point.
     * 
     */
    private @Nullable String uid;

    private ContactPointWebex() {}
    /**
     * @return The URL to send webhook requests to.
     * 
     */
    public Optional<String> apiUrl() {
        return Optional.ofNullable(this.apiUrl);
    }
    /**
     * @return Whether to disable sending resolve messages. Defaults to `false`.
     * 
     */
    public Optional<Boolean> disableResolveMessage() {
        return Optional.ofNullable(this.disableResolveMessage);
    }
    /**
     * @return The templated title of the message to send.
     * 
     */
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }
    /**
     * @return ID of the Webex Teams room where to send the messages.
     * 
     */
    public Optional<String> roomId() {
        return Optional.ofNullable(this.roomId);
    }
    /**
     * @return Additional custom properties to attach to the notifier. Defaults to `map[]`.
     * 
     */
    public Map<String,String> settings() {
        return this.settings == null ? Map.of() : this.settings;
    }
    /**
     * @return The bearer token used to authorize the client.
     * 
     */
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }
    /**
     * @return The UID of the contact point.
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactPointWebex defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiUrl;
        private @Nullable Boolean disableResolveMessage;
        private @Nullable String message;
        private @Nullable String roomId;
        private @Nullable Map<String,String> settings;
        private @Nullable String token;
        private @Nullable String uid;
        public Builder() {}
        public Builder(ContactPointWebex defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiUrl = defaults.apiUrl;
    	      this.disableResolveMessage = defaults.disableResolveMessage;
    	      this.message = defaults.message;
    	      this.roomId = defaults.roomId;
    	      this.settings = defaults.settings;
    	      this.token = defaults.token;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder apiUrl(@Nullable String apiUrl) {
            this.apiUrl = apiUrl;
            return this;
        }
        @CustomType.Setter
        public Builder disableResolveMessage(@Nullable Boolean disableResolveMessage) {
            this.disableResolveMessage = disableResolveMessage;
            return this;
        }
        @CustomType.Setter
        public Builder message(@Nullable String message) {
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder roomId(@Nullable String roomId) {
            this.roomId = roomId;
            return this;
        }
        @CustomType.Setter
        public Builder settings(@Nullable Map<String,String> settings) {
            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder token(@Nullable String token) {
            this.token = token;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        public ContactPointWebex build() {
            final var o = new ContactPointWebex();
            o.apiUrl = apiUrl;
            o.disableResolveMessage = disableResolveMessage;
            o.message = message;
            o.roomId = roomId;
            o.settings = settings;
            o.token = token;
            o.uid = uid;
            return o;
        }
    }
}
