// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserResult {
    /**
     * @return The email address of the Grafana user. Defaults to ``.
     * 
     */
    private @Nullable String email;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether the user is an admin.
     * 
     */
    private Boolean isAdmin;
    /**
     * @return The username for the Grafana user. Defaults to ``.
     * 
     */
    private @Nullable String login;
    /**
     * @return The display name for the Grafana user.
     * 
     */
    private String name;
    /**
     * @return The numerical ID of the Grafana user. Defaults to `-1`.
     * 
     */
    private @Nullable Integer userId;

    private GetUserResult() {}
    /**
     * @return The email address of the Grafana user. Defaults to ``.
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the user is an admin.
     * 
     */
    public Boolean isAdmin() {
        return this.isAdmin;
    }
    /**
     * @return The username for the Grafana user. Defaults to ``.
     * 
     */
    public Optional<String> login() {
        return Optional.ofNullable(this.login);
    }
    /**
     * @return The display name for the Grafana user.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The numerical ID of the Grafana user. Defaults to `-1`.
     * 
     */
    public Optional<Integer> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String email;
        private String id;
        private Boolean isAdmin;
        private @Nullable String login;
        private String name;
        private @Nullable Integer userId;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.isAdmin = defaults.isAdmin;
    	      this.login = defaults.login;
    	      this.name = defaults.name;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAdmin(Boolean isAdmin) {
            this.isAdmin = Objects.requireNonNull(isAdmin);
            return this;
        }
        @CustomType.Setter
        public Builder login(@Nullable String login) {
            this.login = login;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder userId(@Nullable Integer userId) {
            this.userId = userId;
            return this;
        }
        public GetUserResult build() {
            final var o = new GetUserResult();
            o.email = email;
            o.id = id;
            o.isAdmin = isAdmin;
            o.login = login;
            o.name = name;
            o.userId = userId;
            return o;
        }
    }
}
