// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.grafana.inputs.OncallIntegrationTemplatesSlackArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OncallIntegrationTemplatesArgs extends com.pulumi.resources.ResourceArgs {

    public static final OncallIntegrationTemplatesArgs Empty = new OncallIntegrationTemplatesArgs();

    /**
     * Template for the key by which alerts are grouped.
     * 
     */
    @Import(name="groupingKey")
    private @Nullable Output<String> groupingKey;

    /**
     * @return Template for the key by which alerts are grouped.
     * 
     */
    public Optional<Output<String>> groupingKey() {
        return Optional.ofNullable(this.groupingKey);
    }

    /**
     * Template for sending a signal to resolve the Incident.
     * 
     */
    @Import(name="resolveSignal")
    private @Nullable Output<String> resolveSignal;

    /**
     * @return Template for sending a signal to resolve the Incident.
     * 
     */
    public Optional<Output<String>> resolveSignal() {
        return Optional.ofNullable(this.resolveSignal);
    }

    /**
     * Templates for Slack.
     * 
     */
    @Import(name="slack")
    private @Nullable Output<OncallIntegrationTemplatesSlackArgs> slack;

    /**
     * @return Templates for Slack.
     * 
     */
    public Optional<Output<OncallIntegrationTemplatesSlackArgs>> slack() {
        return Optional.ofNullable(this.slack);
    }

    private OncallIntegrationTemplatesArgs() {}

    private OncallIntegrationTemplatesArgs(OncallIntegrationTemplatesArgs $) {
        this.groupingKey = $.groupingKey;
        this.resolveSignal = $.resolveSignal;
        this.slack = $.slack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OncallIntegrationTemplatesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OncallIntegrationTemplatesArgs $;

        public Builder() {
            $ = new OncallIntegrationTemplatesArgs();
        }

        public Builder(OncallIntegrationTemplatesArgs defaults) {
            $ = new OncallIntegrationTemplatesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupingKey Template for the key by which alerts are grouped.
         * 
         * @return builder
         * 
         */
        public Builder groupingKey(@Nullable Output<String> groupingKey) {
            $.groupingKey = groupingKey;
            return this;
        }

        /**
         * @param groupingKey Template for the key by which alerts are grouped.
         * 
         * @return builder
         * 
         */
        public Builder groupingKey(String groupingKey) {
            return groupingKey(Output.of(groupingKey));
        }

        /**
         * @param resolveSignal Template for sending a signal to resolve the Incident.
         * 
         * @return builder
         * 
         */
        public Builder resolveSignal(@Nullable Output<String> resolveSignal) {
            $.resolveSignal = resolveSignal;
            return this;
        }

        /**
         * @param resolveSignal Template for sending a signal to resolve the Incident.
         * 
         * @return builder
         * 
         */
        public Builder resolveSignal(String resolveSignal) {
            return resolveSignal(Output.of(resolveSignal));
        }

        /**
         * @param slack Templates for Slack.
         * 
         * @return builder
         * 
         */
        public Builder slack(@Nullable Output<OncallIntegrationTemplatesSlackArgs> slack) {
            $.slack = slack;
            return this;
        }

        /**
         * @param slack Templates for Slack.
         * 
         * @return builder
         * 
         */
        public Builder slack(OncallIntegrationTemplatesSlackArgs slack) {
            return slack(Output.of(slack));
        }

        public OncallIntegrationTemplatesArgs build() {
            return $;
        }
    }

}
