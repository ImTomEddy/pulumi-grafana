// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.grafana.RoleAssignmentArgs;
import com.pulumi.grafana.Utilities;
import com.pulumi.grafana.inputs.RoleAssignmentState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * **Note:** This resource is available only with Grafana Enterprise 9.2+.
 * * [Official documentation](https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/)
 * * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/access_control/)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.grafana.Role;
 * import com.pulumi.grafana.RoleArgs;
 * import com.pulumi.grafana.inputs.RolePermissionArgs;
 * import com.pulumi.grafana.Team;
 * import com.pulumi.grafana.User;
 * import com.pulumi.grafana.UserArgs;
 * import com.pulumi.grafana.ServiceAccount;
 * import com.pulumi.grafana.ServiceAccountArgs;
 * import com.pulumi.grafana.RoleAssignment;
 * import com.pulumi.grafana.RoleAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testRole = new Role(&#34;testRole&#34;, RoleArgs.builder()        
 *             .uid(&#34;testrole&#34;)
 *             .version(1)
 *             .global(true)
 *             .permissions(RolePermissionArgs.builder()
 *                 .action(&#34;org.users:add&#34;)
 *                 .scope(&#34;users:*&#34;)
 *                 .build())
 *             .build());
 * 
 *         var testTeam = new Team(&#34;testTeam&#34;);
 * 
 *         var testUser = new User(&#34;testUser&#34;, UserArgs.builder()        
 *             .email(&#34;terraform_user@test.com&#34;)
 *             .login(&#34;terraform_user@test.com&#34;)
 *             .password(&#34;password&#34;)
 *             .build());
 * 
 *         var testSa = new ServiceAccount(&#34;testSa&#34;, ServiceAccountArgs.builder()        
 *             .role(&#34;Viewer&#34;)
 *             .build());
 * 
 *         var test = new RoleAssignment(&#34;test&#34;, RoleAssignmentArgs.builder()        
 *             .roleUid(testRole.uid())
 *             .users(testUser.id())
 *             .teams(testTeam.id())
 *             .serviceAccounts(testSa.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="grafana:index/roleAssignment:RoleAssignment")
public class RoleAssignment extends com.pulumi.resources.CustomResource {
    /**
     * Grafana RBAC role UID.
     * 
     */
    @Export(name="roleUid", refs={String.class}, tree="[0]")
    private Output<String> roleUid;

    /**
     * @return Grafana RBAC role UID.
     * 
     */
    public Output<String> roleUid() {
        return this.roleUid;
    }
    /**
     * IDs of service accounts that the role should be assigned to.
     * 
     */
    @Export(name="serviceAccounts", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> serviceAccounts;

    /**
     * @return IDs of service accounts that the role should be assigned to.
     * 
     */
    public Output<Optional<List<Integer>>> serviceAccounts() {
        return Codegen.optional(this.serviceAccounts);
    }
    /**
     * IDs of teams that the role should be assigned to.
     * 
     */
    @Export(name="teams", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> teams;

    /**
     * @return IDs of teams that the role should be assigned to.
     * 
     */
    public Output<Optional<List<String>>> teams() {
        return Codegen.optional(this.teams);
    }
    /**
     * IDs of users that the role should be assigned to.
     * 
     */
    @Export(name="users", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> users;

    /**
     * @return IDs of users that the role should be assigned to.
     * 
     */
    public Output<Optional<List<Integer>>> users() {
        return Codegen.optional(this.users);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleAssignment(String name) {
        this(name, RoleAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleAssignment(String name, RoleAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleAssignment(String name, RoleAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/roleAssignment:RoleAssignment", name, args == null ? RoleAssignmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RoleAssignment(String name, Output<String> id, @Nullable RoleAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("grafana:index/roleAssignment:RoleAssignment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleAssignment get(String name, Output<String> id, @Nullable RoleAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RoleAssignment(name, id, state, options);
    }
}
