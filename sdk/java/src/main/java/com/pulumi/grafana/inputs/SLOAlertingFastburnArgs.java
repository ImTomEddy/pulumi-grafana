// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.grafana.inputs.SLOAlertingFastburnAnnotationArgs;
import com.pulumi.grafana.inputs.SLOAlertingFastburnLabelArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SLOAlertingFastburnArgs extends com.pulumi.resources.ResourceArgs {

    public static final SLOAlertingFastburnArgs Empty = new SLOAlertingFastburnArgs();

    /**
     * Annotations will be attached to all alerts generated by any of these rules.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<List<SLOAlertingFastburnAnnotationArgs>> annotations;

    /**
     * @return Annotations will be attached to all alerts generated by any of these rules.
     * 
     */
    public Optional<Output<List<SLOAlertingFastburnAnnotationArgs>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Labels to attach only to Fast Burn alerts.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<SLOAlertingFastburnLabelArgs>> labels;

    /**
     * @return Labels to attach only to Fast Burn alerts.
     * 
     */
    public Optional<Output<List<SLOAlertingFastburnLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    private SLOAlertingFastburnArgs() {}

    private SLOAlertingFastburnArgs(SLOAlertingFastburnArgs $) {
        this.annotations = $.annotations;
        this.labels = $.labels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SLOAlertingFastburnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SLOAlertingFastburnArgs $;

        public Builder() {
            $ = new SLOAlertingFastburnArgs();
        }

        public Builder(SLOAlertingFastburnArgs defaults) {
            $ = new SLOAlertingFastburnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Annotations will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<List<SLOAlertingFastburnAnnotationArgs>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder annotations(List<SLOAlertingFastburnAnnotationArgs> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param annotations Annotations will be attached to all alerts generated by any of these rules.
         * 
         * @return builder
         * 
         */
        public Builder annotations(SLOAlertingFastburnAnnotationArgs... annotations) {
            return annotations(List.of(annotations));
        }

        /**
         * @param labels Labels to attach only to Fast Burn alerts.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<SLOAlertingFastburnLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels to attach only to Fast Burn alerts.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<SLOAlertingFastburnLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels Labels to attach only to Fast Burn alerts.
         * 
         * @return builder
         * 
         */
        public Builder labels(SLOAlertingFastburnLabelArgs... labels) {
            return labels(List.of(labels));
        }

        public SLOAlertingFastburnArgs build() {
            return $;
        }
    }

}
