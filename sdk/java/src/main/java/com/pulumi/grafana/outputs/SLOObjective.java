// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SLOObjective {
    /**
     * @return Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
     * 
     */
    private Double value;
    /**
     * @return A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
     * 
     */
    private String window;

    private SLOObjective() {}
    /**
     * @return Value between 0 and 1. If the value of the query is above the objective, the SLO is met.
     * 
     */
    public Double value() {
        return this.value;
    }
    /**
     * @return A Prometheus-parsable time duration string like 24h, 60m. This is the time window the objective is measured over.
     * 
     */
    public String window() {
        return this.window;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SLOObjective defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double value;
        private String window;
        public Builder() {}
        public Builder(SLOObjective defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.value = defaults.value;
    	      this.window = defaults.window;
        }

        @CustomType.Setter
        public Builder value(Double value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        @CustomType.Setter
        public Builder window(String window) {
            this.window = Objects.requireNonNull(window);
            return this;
        }
        public SLOObjective build() {
            final var o = new SLOObjective();
            o.value = value;
            o.window = window;
            return o;
        }
    }
}
