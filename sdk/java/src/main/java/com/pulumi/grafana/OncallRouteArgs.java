// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.grafana.inputs.OncallRouteMsteamsArgs;
import com.pulumi.grafana.inputs.OncallRouteSlackArgs;
import com.pulumi.grafana.inputs.OncallRouteTelegramArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OncallRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final OncallRouteArgs Empty = new OncallRouteArgs();

    /**
     * The ID of the escalation chain.
     * 
     */
    @Import(name="escalationChainId", required=true)
    private Output<String> escalationChainId;

    /**
     * @return The ID of the escalation chain.
     * 
     */
    public Output<String> escalationChainId() {
        return this.escalationChainId;
    }

    /**
     * The ID of the integration.
     * 
     */
    @Import(name="integrationId", required=true)
    private Output<String> integrationId;

    /**
     * @return The ID of the integration.
     * 
     */
    public Output<String> integrationId() {
        return this.integrationId;
    }

    /**
     * MS teams-specific settings for a route.
     * 
     */
    @Import(name="msteams")
    private @Nullable Output<OncallRouteMsteamsArgs> msteams;

    /**
     * @return MS teams-specific settings for a route.
     * 
     */
    public Optional<Output<OncallRouteMsteamsArgs>> msteams() {
        return Optional.ofNullable(this.msteams);
    }

    /**
     * The position of the route (starts from 0).
     * 
     */
    @Import(name="position", required=true)
    private Output<Integer> position;

    /**
     * @return The position of the route (starts from 0).
     * 
     */
    public Output<Integer> position() {
        return this.position;
    }

    /**
     * Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
     * 
     */
    @Import(name="routingRegex", required=true)
    private Output<String> routingRegex;

    /**
     * @return Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
     * 
     */
    public Output<String> routingRegex() {
        return this.routingRegex;
    }

    /**
     * The type of route. Can be jinja2, regex Defaults to `regex`.
     * 
     */
    @Import(name="routingType")
    private @Nullable Output<String> routingType;

    /**
     * @return The type of route. Can be jinja2, regex Defaults to `regex`.
     * 
     */
    public Optional<Output<String>> routingType() {
        return Optional.ofNullable(this.routingType);
    }

    /**
     * Slack-specific settings for a route.
     * 
     */
    @Import(name="slack")
    private @Nullable Output<OncallRouteSlackArgs> slack;

    /**
     * @return Slack-specific settings for a route.
     * 
     */
    public Optional<Output<OncallRouteSlackArgs>> slack() {
        return Optional.ofNullable(this.slack);
    }

    /**
     * Telegram-specific settings for a route.
     * 
     */
    @Import(name="telegram")
    private @Nullable Output<OncallRouteTelegramArgs> telegram;

    /**
     * @return Telegram-specific settings for a route.
     * 
     */
    public Optional<Output<OncallRouteTelegramArgs>> telegram() {
        return Optional.ofNullable(this.telegram);
    }

    private OncallRouteArgs() {}

    private OncallRouteArgs(OncallRouteArgs $) {
        this.escalationChainId = $.escalationChainId;
        this.integrationId = $.integrationId;
        this.msteams = $.msteams;
        this.position = $.position;
        this.routingRegex = $.routingRegex;
        this.routingType = $.routingType;
        this.slack = $.slack;
        this.telegram = $.telegram;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OncallRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OncallRouteArgs $;

        public Builder() {
            $ = new OncallRouteArgs();
        }

        public Builder(OncallRouteArgs defaults) {
            $ = new OncallRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param escalationChainId The ID of the escalation chain.
         * 
         * @return builder
         * 
         */
        public Builder escalationChainId(Output<String> escalationChainId) {
            $.escalationChainId = escalationChainId;
            return this;
        }

        /**
         * @param escalationChainId The ID of the escalation chain.
         * 
         * @return builder
         * 
         */
        public Builder escalationChainId(String escalationChainId) {
            return escalationChainId(Output.of(escalationChainId));
        }

        /**
         * @param integrationId The ID of the integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationId(Output<String> integrationId) {
            $.integrationId = integrationId;
            return this;
        }

        /**
         * @param integrationId The ID of the integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationId(String integrationId) {
            return integrationId(Output.of(integrationId));
        }

        /**
         * @param msteams MS teams-specific settings for a route.
         * 
         * @return builder
         * 
         */
        public Builder msteams(@Nullable Output<OncallRouteMsteamsArgs> msteams) {
            $.msteams = msteams;
            return this;
        }

        /**
         * @param msteams MS teams-specific settings for a route.
         * 
         * @return builder
         * 
         */
        public Builder msteams(OncallRouteMsteamsArgs msteams) {
            return msteams(Output.of(msteams));
        }

        /**
         * @param position The position of the route (starts from 0).
         * 
         * @return builder
         * 
         */
        public Builder position(Output<Integer> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position The position of the route (starts from 0).
         * 
         * @return builder
         * 
         */
        public Builder position(Integer position) {
            return position(Output.of(position));
        }

        /**
         * @param routingRegex Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
         * 
         * @return builder
         * 
         */
        public Builder routingRegex(Output<String> routingRegex) {
            $.routingRegex = routingRegex;
            return this;
        }

        /**
         * @param routingRegex Python Regex query. Route is chosen for an alert if there is a match inside the alert payload.
         * 
         * @return builder
         * 
         */
        public Builder routingRegex(String routingRegex) {
            return routingRegex(Output.of(routingRegex));
        }

        /**
         * @param routingType The type of route. Can be jinja2, regex Defaults to `regex`.
         * 
         * @return builder
         * 
         */
        public Builder routingType(@Nullable Output<String> routingType) {
            $.routingType = routingType;
            return this;
        }

        /**
         * @param routingType The type of route. Can be jinja2, regex Defaults to `regex`.
         * 
         * @return builder
         * 
         */
        public Builder routingType(String routingType) {
            return routingType(Output.of(routingType));
        }

        /**
         * @param slack Slack-specific settings for a route.
         * 
         * @return builder
         * 
         */
        public Builder slack(@Nullable Output<OncallRouteSlackArgs> slack) {
            $.slack = slack;
            return this;
        }

        /**
         * @param slack Slack-specific settings for a route.
         * 
         * @return builder
         * 
         */
        public Builder slack(OncallRouteSlackArgs slack) {
            return slack(Output.of(slack));
        }

        /**
         * @param telegram Telegram-specific settings for a route.
         * 
         * @return builder
         * 
         */
        public Builder telegram(@Nullable Output<OncallRouteTelegramArgs> telegram) {
            $.telegram = telegram;
            return this;
        }

        /**
         * @param telegram Telegram-specific settings for a route.
         * 
         * @return builder
         * 
         */
        public Builder telegram(OncallRouteTelegramArgs telegram) {
            return telegram(Output.of(telegram));
        }

        public OncallRouteArgs build() {
            $.escalationChainId = Objects.requireNonNull($.escalationChainId, "expected parameter 'escalationChainId' to be non-null");
            $.integrationId = Objects.requireNonNull($.integrationId, "expected parameter 'integrationId' to be non-null");
            $.position = Objects.requireNonNull($.position, "expected parameter 'position' to be non-null");
            $.routingRegex = Objects.requireNonNull($.routingRegex, "expected parameter 'routingRegex' to be non-null");
            return $;
        }
    }

}
