// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.grafana;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudAccessPolicyTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudAccessPolicyTokenArgs Empty = new CloudAccessPolicyTokenArgs();

    /**
     * ID of the access policy for which to create a token.
     * 
     */
    @Import(name="accessPolicyId", required=true)
    private Output<String> accessPolicyId;

    /**
     * @return ID of the access policy for which to create a token.
     * 
     */
    public Output<String> accessPolicyId() {
        return this.accessPolicyId;
    }

    /**
     * Display name of the access policy token. Defaults to the name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Display name of the access policy token. Defaults to the name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Expiration date of the access policy token. Does not expire by default.
     * 
     */
    @Import(name="expiresAt")
    private @Nullable Output<String> expiresAt;

    /**
     * @return Expiration date of the access policy token. Does not expire by default.
     * 
     */
    public Optional<Output<String>> expiresAt() {
        return Optional.ofNullable(this.expiresAt);
    }

    /**
     * Name of the access policy token.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the access policy token.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private CloudAccessPolicyTokenArgs() {}

    private CloudAccessPolicyTokenArgs(CloudAccessPolicyTokenArgs $) {
        this.accessPolicyId = $.accessPolicyId;
        this.displayName = $.displayName;
        this.expiresAt = $.expiresAt;
        this.name = $.name;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudAccessPolicyTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudAccessPolicyTokenArgs $;

        public Builder() {
            $ = new CloudAccessPolicyTokenArgs();
        }

        public Builder(CloudAccessPolicyTokenArgs defaults) {
            $ = new CloudAccessPolicyTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPolicyId ID of the access policy for which to create a token.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyId(Output<String> accessPolicyId) {
            $.accessPolicyId = accessPolicyId;
            return this;
        }

        /**
         * @param accessPolicyId ID of the access policy for which to create a token.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyId(String accessPolicyId) {
            return accessPolicyId(Output.of(accessPolicyId));
        }

        /**
         * @param displayName Display name of the access policy token. Defaults to the name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display name of the access policy token. Defaults to the name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param expiresAt Expiration date of the access policy token. Does not expire by default.
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(@Nullable Output<String> expiresAt) {
            $.expiresAt = expiresAt;
            return this;
        }

        /**
         * @param expiresAt Expiration date of the access policy token. Does not expire by default.
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(String expiresAt) {
            return expiresAt(Output.of(expiresAt));
        }

        /**
         * @param name Name of the access policy token.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the access policy token.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public CloudAccessPolicyTokenArgs build() {
            $.accessPolicyId = Objects.requireNonNull($.accessPolicyId, "expected parameter 'accessPolicyId' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
