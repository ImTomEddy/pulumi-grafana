// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    public static class GetRole
    {
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("grafana:index/getRole:getRole", args ?? new GetRoleArgs(), options.WithDefaults());

        public static Output<GetRoleResult> Invoke(GetRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleResult>("grafana:index/getRole:getRole", args ?? new GetRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRoleArgs()
        {
        }
        public static new GetRoleArgs Empty => new GetRoleArgs();
    }

    public sealed class GetRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRoleInvokeArgs()
        {
        }
        public static new GetRoleInvokeArgs Empty => new GetRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        public readonly string Description;
        public readonly string DisplayName;
        public readonly bool Global;
        public readonly string Group;
        public readonly bool Hidden;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string OrgId;
        public readonly ImmutableArray<Outputs.GetRolePermissionResult> Permissions;
        public readonly string Uid;
        public readonly int Version;

        [OutputConstructor]
        private GetRoleResult(
            string description,

            string displayName,

            bool global,

            string group,

            bool hidden,

            string id,

            string name,

            string orgId,

            ImmutableArray<Outputs.GetRolePermissionResult> permissions,

            string uid,

            int version)
        {
            Description = description;
            DisplayName = displayName;
            Global = global;
            Group = group;
            Hidden = hidden;
            Id = id;
            Name = name;
            OrgId = orgId;
            Permissions = permissions;
            Uid = uid;
            Version = version;
        }
    }
}
