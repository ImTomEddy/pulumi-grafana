// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Grafana
{
    /// <summary>
    /// * [HTTP API](https://grafana.com/docs/oncall/latest/oncall-api-reference/outgoing_webhooks/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Lbrlabs.PulumiPackage.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test_acc_outgoingWebhook = new Grafana.OncallOutgoingWebhook("test-acc-outgoingWebhook", new()
    ///     {
    ///         Url = "https://example.com/",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = grafana.Oncall,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import grafana:index/oncallOutgoingWebhook:OncallOutgoingWebhook outgoing_webhook_name {{outgoing_webhook_id}}
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:index/oncallOutgoingWebhook:OncallOutgoingWebhook")]
    public partial class OncallOutgoingWebhook : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The auth data of the webhook. Used in Authorization header instead of user/password auth.
        /// </summary>
        [Output("authorizationHeader")]
        public Output<string?> AuthorizationHeader { get; private set; } = null!;

        /// <summary>
        /// The data of the webhook.
        /// </summary>
        [Output("data")]
        public Output<string?> Data { get; private set; } = null!;

        /// <summary>
        /// Forwards whole payload of the alert to the webhook's url as POST data.
        /// </summary>
        [Output("forwardWholePayload")]
        public Output<bool?> ForwardWholePayload { get; private set; } = null!;

        /// <summary>
        /// The name of the outgoing webhook.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The auth data of the webhook. Used for Basic authentication
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana.getOncallTeam` datasource.
        /// </summary>
        [Output("teamId")]
        public Output<string?> TeamId { get; private set; } = null!;

        /// <summary>
        /// The webhook URL.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// The auth data of the webhook. Used for Basic authentication.
        /// </summary>
        [Output("user")]
        public Output<string?> User { get; private set; } = null!;


        /// <summary>
        /// Create a OncallOutgoingWebhook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OncallOutgoingWebhook(string name, OncallOutgoingWebhookArgs args, CustomResourceOptions? options = null)
            : base("grafana:index/oncallOutgoingWebhook:OncallOutgoingWebhook", name, args ?? new OncallOutgoingWebhookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OncallOutgoingWebhook(string name, Input<string> id, OncallOutgoingWebhookState? state = null, CustomResourceOptions? options = null)
            : base("grafana:index/oncallOutgoingWebhook:OncallOutgoingWebhook", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OncallOutgoingWebhook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OncallOutgoingWebhook Get(string name, Input<string> id, OncallOutgoingWebhookState? state = null, CustomResourceOptions? options = null)
        {
            return new OncallOutgoingWebhook(name, id, state, options);
        }
    }

    public sealed class OncallOutgoingWebhookArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auth data of the webhook. Used in Authorization header instead of user/password auth.
        /// </summary>
        [Input("authorizationHeader")]
        public Input<string>? AuthorizationHeader { get; set; }

        /// <summary>
        /// The data of the webhook.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// Forwards whole payload of the alert to the webhook's url as POST data.
        /// </summary>
        [Input("forwardWholePayload")]
        public Input<bool>? ForwardWholePayload { get; set; }

        /// <summary>
        /// The name of the outgoing webhook.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The auth data of the webhook. Used for Basic authentication
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana.getOncallTeam` datasource.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The webhook URL.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// The auth data of the webhook. Used for Basic authentication.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public OncallOutgoingWebhookArgs()
        {
        }
        public static new OncallOutgoingWebhookArgs Empty => new OncallOutgoingWebhookArgs();
    }

    public sealed class OncallOutgoingWebhookState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auth data of the webhook. Used in Authorization header instead of user/password auth.
        /// </summary>
        [Input("authorizationHeader")]
        public Input<string>? AuthorizationHeader { get; set; }

        /// <summary>
        /// The data of the webhook.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// Forwards whole payload of the alert to the webhook's url as POST data.
        /// </summary>
        [Input("forwardWholePayload")]
        public Input<bool>? ForwardWholePayload { get; set; }

        /// <summary>
        /// The name of the outgoing webhook.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The auth data of the webhook. Used for Basic authentication
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana.getOncallTeam` datasource.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The webhook URL.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The auth data of the webhook. Used for Basic authentication.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public OncallOutgoingWebhookState()
        {
        }
        public static new OncallOutgoingWebhookState Empty => new OncallOutgoingWebhookState();
    }
}
