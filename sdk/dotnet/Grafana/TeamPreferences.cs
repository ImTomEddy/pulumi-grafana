// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Grafana
{
    /// <summary>
    /// * [Official documentation](https://grafana.com/docs/grafana/latest/administration/organization-preferences/)
    /// * [HTTP API](https://grafana.com/docs/grafana/latest/developers/http_api/team/)
    /// 
    /// !&gt; Deprecated: Use the `preferences` attribute of the `grafana.Team` resource instead.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using System.Linq;
    /// using Pulumi;
    /// using Grafana = Lbrlabs.PulumiPackage.Grafana;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var metrics = new Grafana.Dashboard("metrics", new()
    ///     {
    ///         ConfigJson = File.ReadAllText("grafana-dashboard.json"),
    ///     });
    /// 
    ///     var team = new Grafana.Team("team");
    /// 
    ///     var teamPreferences = new Grafana.TeamPreferences("teamPreferences", new()
    ///     {
    ///         TeamId = team.Id,
    ///         Theme = "dark",
    ///         Timezone = "browser",
    ///         HomeDashboardId = metrics.DashboardId,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [GrafanaResourceType("grafana:index/teamPreferences:TeamPreferences")]
    public partial class TeamPreferences : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The numeric ID of the dashboard to display when a team member logs in.
        /// </summary>
        [Output("homeDashboardId")]
        public Output<int?> HomeDashboardId { get; private set; } = null!;

        /// <summary>
        /// The numeric team ID.
        /// </summary>
        [Output("teamId")]
        public Output<int> TeamId { get; private set; } = null!;

        /// <summary>
        /// The theme for the specified team. Available themes are `light`, `dark`, or an empty string for the default theme.
        /// </summary>
        [Output("theme")]
        public Output<string?> Theme { get; private set; } = null!;

        /// <summary>
        /// The timezone for the specified team. Available values are `utc`, `browser`, or an empty string for the default.
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a TeamPreferences resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamPreferences(string name, TeamPreferencesArgs args, CustomResourceOptions? options = null)
            : base("grafana:index/teamPreferences:TeamPreferences", name, args ?? new TeamPreferencesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamPreferences(string name, Input<string> id, TeamPreferencesState? state = null, CustomResourceOptions? options = null)
            : base("grafana:index/teamPreferences:TeamPreferences", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamPreferences resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamPreferences Get(string name, Input<string> id, TeamPreferencesState? state = null, CustomResourceOptions? options = null)
        {
            return new TeamPreferences(name, id, state, options);
        }
    }

    public sealed class TeamPreferencesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The numeric ID of the dashboard to display when a team member logs in.
        /// </summary>
        [Input("homeDashboardId")]
        public Input<int>? HomeDashboardId { get; set; }

        /// <summary>
        /// The numeric team ID.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<int> TeamId { get; set; } = null!;

        /// <summary>
        /// The theme for the specified team. Available themes are `light`, `dark`, or an empty string for the default theme.
        /// </summary>
        [Input("theme")]
        public Input<string>? Theme { get; set; }

        /// <summary>
        /// The timezone for the specified team. Available values are `utc`, `browser`, or an empty string for the default.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public TeamPreferencesArgs()
        {
        }
        public static new TeamPreferencesArgs Empty => new TeamPreferencesArgs();
    }

    public sealed class TeamPreferencesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The numeric ID of the dashboard to display when a team member logs in.
        /// </summary>
        [Input("homeDashboardId")]
        public Input<int>? HomeDashboardId { get; set; }

        /// <summary>
        /// The numeric team ID.
        /// </summary>
        [Input("teamId")]
        public Input<int>? TeamId { get; set; }

        /// <summary>
        /// The theme for the specified team. Available themes are `light`, `dark`, or an empty string for the default theme.
        /// </summary>
        [Input("theme")]
        public Input<string>? Theme { get; set; }

        /// <summary>
        /// The timezone for the specified team. Available values are `utc`, `browser`, or an empty string for the default.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public TeamPreferencesState()
        {
        }
        public static new TeamPreferencesState Empty => new TeamPreferencesState();
    }
}
