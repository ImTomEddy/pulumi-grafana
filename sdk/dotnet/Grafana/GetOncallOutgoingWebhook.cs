// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Grafana
{
    public static class GetOncallOutgoingWebhook
    {
        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/grafana-cloud/oncall/oncall-api-reference/outgoing_webhooks/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleOutgoingWebhook = Grafana.GetOncallOutgoingWebhook.Invoke(new()
        ///     {
        ///         Name = "example_outgoing_webhook",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOncallOutgoingWebhookResult> InvokeAsync(GetOncallOutgoingWebhookArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOncallOutgoingWebhookResult>("grafana:index/getOncallOutgoingWebhook:getOncallOutgoingWebhook", args ?? new GetOncallOutgoingWebhookArgs(), options.WithDefaults());

        /// <summary>
        /// * [HTTP API](https://grafana.com/docs/grafana-cloud/oncall/oncall-api-reference/outgoing_webhooks/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Grafana = Pulumi.Grafana;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleOutgoingWebhook = Grafana.GetOncallOutgoingWebhook.Invoke(new()
        ///     {
        ///         Name = "example_outgoing_webhook",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOncallOutgoingWebhookResult> Invoke(GetOncallOutgoingWebhookInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOncallOutgoingWebhookResult>("grafana:index/getOncallOutgoingWebhook:getOncallOutgoingWebhook", args ?? new GetOncallOutgoingWebhookInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOncallOutgoingWebhookArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The outgoing webhook name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetOncallOutgoingWebhookArgs()
        {
        }
        public static new GetOncallOutgoingWebhookArgs Empty => new GetOncallOutgoingWebhookArgs();
    }

    public sealed class GetOncallOutgoingWebhookInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The outgoing webhook name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetOncallOutgoingWebhookInvokeArgs()
        {
        }
        public static new GetOncallOutgoingWebhookInvokeArgs Empty => new GetOncallOutgoingWebhookInvokeArgs();
    }


    [OutputType]
    public sealed class GetOncallOutgoingWebhookResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The outgoing webhook name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetOncallOutgoingWebhookResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
