// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Grafana.Inputs
{

    public sealed class DataSourceJsonDataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Prometheus) The name of the Alertmanager datasource to manage alerts via UI
        /// </summary>
        [Input("alertmanagerUid")]
        public Input<string>? AlertmanagerUid { get; set; }

        /// <summary>
        /// (CloudWatch, Athena) The ARN of the role to be assumed by Grafana when using the CloudWatch or Athena data source.
        /// </summary>
        [Input("assumeRoleArn")]
        public Input<string>? AssumeRoleArn { get; set; }

        /// <summary>
        /// (CloudWatch, Athena) The authentication type used to access the data source.
        /// </summary>
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        /// <summary>
        /// (Stackdriver) The authentication type: `jwt` or `gce`.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// (Athena) Athena catalog.
        /// </summary>
        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        /// <summary>
        /// (Stackdriver) Service account email address.
        /// </summary>
        [Input("clientEmail")]
        public Input<string>? ClientEmail { get; set; }

        /// <summary>
        /// (Azure Monitor) The service account client id.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// (Azure Monitor) The cloud name.
        /// </summary>
        [Input("cloudName")]
        public Input<string>? CloudName { get; set; }

        /// <summary>
        /// (MySQL, PostgreSQL, and MSSQL) Maximum amount of time in seconds a connection may be reused (Grafana v5.4+).
        /// </summary>
        [Input("connMaxLifetime")]
        public Input<int>? ConnMaxLifetime { get; set; }

        /// <summary>
        /// (CloudWatch) A comma-separated list of custom namespaces to be queried by the CloudWatch data source.
        /// </summary>
        [Input("customMetricsNamespaces")]
        public Input<string>? CustomMetricsNamespaces { get; set; }

        /// <summary>
        /// (Athena) Name of the database within the catalog.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// (InfluxDB) The default bucket for the data source.
        /// </summary>
        [Input("defaultBucket")]
        public Input<string>? DefaultBucket { get; set; }

        /// <summary>
        /// (Stackdriver) The default project for the data source.
        /// </summary>
        [Input("defaultProject")]
        public Input<string>? DefaultProject { get; set; }

        /// <summary>
        /// (CloudWatch, Athena) The default region for the data source.
        /// </summary>
        [Input("defaultRegion")]
        public Input<string>? DefaultRegion { get; set; }

        [Input("derivedFields")]
        private InputList<Inputs.DataSourceJsonDataDerivedFieldArgs>? _derivedFields;

        /// <summary>
        /// (Loki) See https://grafana.com/docs/grafana/latest/datasources/loki/#derived-fields
        /// </summary>
        public InputList<Inputs.DataSourceJsonDataDerivedFieldArgs> DerivedFields
        {
            get => _derivedFields ?? (_derivedFields = new InputList<Inputs.DataSourceJsonDataDerivedFieldArgs>());
            set => _derivedFields = value;
        }

        /// <summary>
        /// (MSSQL) Connection SSL encryption handling: 'disable', 'false' or 'true'.
        /// </summary>
        [Input("encrypt")]
        public Input<string>? Encrypt { get; set; }

        /// <summary>
        /// (Elasticsearch) Elasticsearch semantic version (Grafana v8.0+).
        /// </summary>
        [Input("esVersion")]
        public Input<string>? EsVersion { get; set; }

        /// <summary>
        /// (CloudWatch, Athena) If you are assuming a role in another account, that has been created with an external ID, specify the external ID here.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// (Github) Github URL
        /// </summary>
        [Input("githubUrl")]
        public Input<string>? GithubUrl { get; set; }

        /// <summary>
        /// (Graphite) Graphite version.
        /// </summary>
        [Input("graphiteVersion")]
        public Input<string>? GraphiteVersion { get; set; }

        /// <summary>
        /// (Prometheus) HTTP method to use for making requests.
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// (Alertmanager) Implementation of Alertmanager. Either 'cortex' or 'prometheus'
        /// </summary>
        [Input("implementation")]
        public Input<string>? Implementation { get; set; }

        /// <summary>
        /// (Elasticsearch) Index date time format. nil(No Pattern), 'Hourly', 'Daily', 'Weekly', 'Monthly' or 'Yearly'.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        /// <summary>
        /// (Elasticsearch) Which field should be used to indicate the priority of the log message.
        /// </summary>
        [Input("logLevelField")]
        public Input<string>? LogLevelField { get; set; }

        /// <summary>
        /// (Elasticsearch) Which field should be used as the log message.
        /// </summary>
        [Input("logMessageField")]
        public Input<string>? LogMessageField { get; set; }

        /// <summary>
        /// (Prometheus) Manage alerts.
        /// </summary>
        [Input("manageAlerts")]
        public Input<bool>? ManageAlerts { get; set; }

        /// <summary>
        /// (Elasticsearch) Maximum number of concurrent shard requests.
        /// </summary>
        [Input("maxConcurrentShardRequests")]
        public Input<int>? MaxConcurrentShardRequests { get; set; }

        /// <summary>
        /// (MySQL, PostgreSQL and MSSQL) Maximum number of connections in the idle connection pool (Grafana v5.4+).
        /// </summary>
        [Input("maxIdleConns")]
        public Input<int>? MaxIdleConns { get; set; }

        /// <summary>
        /// (Loki) Upper limit for the number of log lines returned by Loki
        /// </summary>
        [Input("maxLines")]
        public Input<int>? MaxLines { get; set; }

        /// <summary>
        /// (MySQL, PostgreSQL and MSSQL) Maximum number of open connections to the database (Grafana v5.4+).
        /// </summary>
        [Input("maxOpenConns")]
        public Input<int>? MaxOpenConns { get; set; }

        /// <summary>
        /// (Sentry) Organization slug.
        /// </summary>
        [Input("orgSlug")]
        public Input<string>? OrgSlug { get; set; }

        /// <summary>
        /// (InfluxDB) An organization is a workspace for a group of users. All dashboards, tasks, buckets, members, etc., belong to an organization.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// (Athena) AWS S3 bucket to store execution outputs. If not specified, the default query result location from the Workgroup configuration will be used.
        /// </summary>
        [Input("outputLocation")]
        public Input<string>? OutputLocation { get; set; }

        /// <summary>
        /// (PostgreSQL) Postgres version as a number (903/904/905/906/1000) meaning v9.3, v9.4, etc.
        /// </summary>
        [Input("postgresVersion")]
        public Input<int>? PostgresVersion { get; set; }

        /// <summary>
        /// (CloudWatch, Athena) The credentials profile name to use when authentication type is set as 'Credentials file'.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// (Prometheus) Timeout for queries made to the Prometheus data source in seconds.
        /// </summary>
        [Input("queryTimeout")]
        public Input<string>? QueryTimeout { get; set; }

        /// <summary>
        /// (Elasticsearch and Prometheus) Specifies the ARN of an IAM role to assume.
        /// </summary>
        [Input("sigv4AssumeRoleArn")]
        public Input<string>? Sigv4AssumeRoleArn { get; set; }

        /// <summary>
        /// (Elasticsearch and Prometheus) Enable usage of SigV4.
        /// </summary>
        [Input("sigv4Auth")]
        public Input<bool>? Sigv4Auth { get; set; }

        /// <summary>
        /// (Elasticsearch and Prometheus) The Sigv4 authentication provider to use: 'default', 'credentials' or 'keys' (AMG: 'workspace-iam-role').
        /// </summary>
        [Input("sigv4AuthType")]
        public Input<string>? Sigv4AuthType { get; set; }

        /// <summary>
        /// (Elasticsearch and Prometheus) When assuming a role in another account use this external ID.
        /// </summary>
        [Input("sigv4ExternalId")]
        public Input<string>? Sigv4ExternalId { get; set; }

        /// <summary>
        /// (Elasticsearch and Prometheus) Credentials profile name, leave blank for default.
        /// </summary>
        [Input("sigv4Profile")]
        public Input<string>? Sigv4Profile { get; set; }

        /// <summary>
        /// (Elasticsearch and Prometheus) AWS region to use for Sigv4.
        /// </summary>
        [Input("sigv4Region")]
        public Input<string>? Sigv4Region { get; set; }

        /// <summary>
        /// (PostgreSQL) SSLmode. 'disable', 'require', 'verify-ca' or 'verify-full'.
        /// </summary>
        [Input("sslMode")]
        public Input<string>? SslMode { get; set; }

        /// <summary>
        /// (Azure Monitor) The subscription id
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        /// <summary>
        /// (Azure Monitor) Service account tenant ID.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// (Elasticsearch) Which field that should be used as timestamp.
        /// </summary>
        [Input("timeField")]
        public Input<string>? TimeField { get; set; }

        /// <summary>
        /// (Prometheus, Elasticsearch, InfluxDB, MySQL, PostgreSQL, and MSSQL) Lowest interval/step value that should be used for this data source. Sometimes called "Scrape Interval" in the Grafana UI.
        /// </summary>
        [Input("timeInterval")]
        public Input<string>? TimeInterval { get; set; }

        /// <summary>
        /// (PostgreSQL) Enable usage of TimescaleDB extension.
        /// </summary>
        [Input("timescaledb")]
        public Input<bool>? Timescaledb { get; set; }

        /// <summary>
        /// (All) Enable TLS authentication using client cert configured in secure json data.
        /// </summary>
        [Input("tlsAuth")]
        public Input<bool>? TlsAuth { get; set; }

        /// <summary>
        /// (All) Enable TLS authentication using CA cert.
        /// </summary>
        [Input("tlsAuthWithCaCert")]
        public Input<bool>? TlsAuthWithCaCert { get; set; }

        /// <summary>
        /// (All) SSL Certificate configuration, either by ‘file-path’ or ‘file-content’.
        /// </summary>
        [Input("tlsConfigurationMethod")]
        public Input<string>? TlsConfigurationMethod { get; set; }

        /// <summary>
        /// (All) Controls whether a client verifies the server’s certificate chain and host name.
        /// </summary>
        [Input("tlsSkipVerify")]
        public Input<bool>? TlsSkipVerify { get; set; }

        /// <summary>
        /// (Stackdriver) The token URI used, provided in the service account key.
        /// </summary>
        [Input("tokenUri")]
        public Input<string>? TokenUri { get; set; }

        /// <summary>
        /// (Cloudwatch) The X-Ray datasource uid to associate to this Cloudwatch datasource.
        /// </summary>
        [Input("tracingDatasourceUid")]
        public Input<string>? TracingDatasourceUid { get; set; }

        /// <summary>
        /// (OpenTSDB) Resolution.
        /// </summary>
        [Input("tsdbResolution")]
        public Input<int>? TsdbResolution { get; set; }

        /// <summary>
        /// (OpenTSDB) Version.
        /// </summary>
        [Input("tsdbVersion")]
        public Input<int>? TsdbVersion { get; set; }

        /// <summary>
        /// (InfluxDB) InfluxQL or Flux.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// (Athena) Workgroup to use.
        /// </summary>
        [Input("workgroup")]
        public Input<string>? Workgroup { get; set; }

        /// <summary>
        /// (Elasticsearch) Enable X-Pack support.
        /// </summary>
        [Input("xpackEnabled")]
        public Input<bool>? XpackEnabled { get; set; }

        public DataSourceJsonDataArgs()
        {
        }
        public static new DataSourceJsonDataArgs Empty => new DataSourceJsonDataArgs();
    }
}
