// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs_Pulumi.Grafana.Outputs
{

    [OutputType]
    public sealed class ContactPointPagerduty
    {
        /// <summary>
        /// The class or type of event, for example `ping failure`.
        /// </summary>
        public readonly string? Class;
        /// <summary>
        /// The component being affected by the event.
        /// </summary>
        public readonly string? Component;
        /// <summary>
        /// Whether to disable sending resolve messages. Defaults to `false`.
        /// </summary>
        public readonly bool? DisableResolveMessage;
        /// <summary>
        /// The group to which the provided component belongs to.
        /// </summary>
        public readonly string? Group;
        /// <summary>
        /// The PagerDuty API key.
        /// </summary>
        public readonly string IntegrationKey;
        /// <summary>
        /// Additional custom properties to attach to the notifier. Defaults to `map[]`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Settings;
        /// <summary>
        /// The PagerDuty event severity level. Default is `critical`.
        /// </summary>
        public readonly string? Severity;
        /// <summary>
        /// The templated summary message of the event.
        /// </summary>
        public readonly string? Summary;
        /// <summary>
        /// The UID of the contact point.
        /// </summary>
        public readonly string? Uid;

        [OutputConstructor]
        private ContactPointPagerduty(
            string? @class,

            string? component,

            bool? disableResolveMessage,

            string? group,

            string integrationKey,

            ImmutableDictionary<string, string>? settings,

            string? severity,

            string? summary,

            string? uid)
        {
            Class = @class;
            Component = component;
            DisableResolveMessage = disableResolveMessage;
            Group = group;
            IntegrationKey = integrationKey;
            Settings = settings;
            Severity = severity;
            Summary = summary;
            Uid = uid;
        }
    }
}
